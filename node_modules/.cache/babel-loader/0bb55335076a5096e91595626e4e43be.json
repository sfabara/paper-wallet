{"ast":null,"code":"var r;\n\nmodule.exports = function rand(len) {\n  if (!r) r = new Rand(null);\n  return r.generate(len);\n};\n\nfunction Rand(rand) {\n  this.rand = rand;\n}\n\nmodule.exports.Rand = Rand;\n\nRand.prototype.generate = function generate(len) {\n  return this._rand(len);\n};\n\nif (typeof window === 'object') {\n  if (window.crypto && window.crypto.getRandomValues) {\n    // Modern browsers\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      window.crypto.getRandomValues(arr);\n      return arr;\n    };\n  } else if (window.msCrypto && window.msCrypto.getRandomValues) {\n    // IE\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      window.msCrypto.getRandomValues(arr);\n      return arr;\n    };\n  } else {\n    // Old junk\n    Rand.prototype._rand = function () {\n      throw new Error('Not implemented yet');\n    };\n  }\n} else {\n  // Node.js or Web worker\n  try {\n    var crypto = require('cry' + 'pto');\n\n    Rand.prototype._rand = function _rand(n) {\n      return crypto.randomBytes(n);\n    };\n  } catch (e) {\n    // Emulate crypto API using randy\n    Rand.prototype._rand = function _rand(n) {\n      var res = new Uint8Array(n);\n\n      for (var i = 0; i < res.length; i++) res[i] = this.rand.getByte();\n\n      return res;\n    };\n  }\n}","map":{"version":3,"sources":["/home/user/Desktop/react-wallet/node_modules/bitcore-lib-litecoin/node_modules/elliptic/node_modules/brorand/index.js"],"names":["r","module","exports","rand","len","Rand","generate","prototype","_rand","window","crypto","getRandomValues","n","arr","Uint8Array","msCrypto","Error","require","randomBytes","e","res","i","length","getByte"],"mappings":"AAAA,IAAIA,CAAJ;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,IAAT,CAAcC,GAAd,EAAmB;AAClC,MAAI,CAACJ,CAAL,EACEA,CAAC,GAAG,IAAIK,IAAJ,CAAS,IAAT,CAAJ;AAEF,SAAOL,CAAC,CAACM,QAAF,CAAWF,GAAX,CAAP;AACD,CALD;;AAOA,SAASC,IAAT,CAAcF,IAAd,EAAoB;AAClB,OAAKA,IAAL,GAAYA,IAAZ;AACD;;AACDF,MAAM,CAACC,OAAP,CAAeG,IAAf,GAAsBA,IAAtB;;AAEAA,IAAI,CAACE,SAAL,CAAeD,QAAf,GAA0B,SAASA,QAAT,CAAkBF,GAAlB,EAAuB;AAC/C,SAAO,KAAKI,KAAL,CAAWJ,GAAX,CAAP;AACD,CAFD;;AAIA,IAAI,OAAOK,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,MAAIA,MAAM,CAACC,MAAP,IAAiBD,MAAM,CAACC,MAAP,CAAcC,eAAnC,EAAoD;AAClD;AACAN,IAAAA,IAAI,CAACE,SAAL,CAAeC,KAAf,GAAuB,SAASA,KAAT,CAAeI,CAAf,EAAkB;AACvC,UAAIC,GAAG,GAAG,IAAIC,UAAJ,CAAeF,CAAf,CAAV;AACAH,MAAAA,MAAM,CAACC,MAAP,CAAcC,eAAd,CAA8BE,GAA9B;AACA,aAAOA,GAAP;AACD,KAJD;AAKD,GAPD,MAOO,IAAIJ,MAAM,CAACM,QAAP,IAAmBN,MAAM,CAACM,QAAP,CAAgBJ,eAAvC,EAAwD;AAC7D;AACAN,IAAAA,IAAI,CAACE,SAAL,CAAeC,KAAf,GAAuB,SAASA,KAAT,CAAeI,CAAf,EAAkB;AACvC,UAAIC,GAAG,GAAG,IAAIC,UAAJ,CAAeF,CAAf,CAAV;AACAH,MAAAA,MAAM,CAACM,QAAP,CAAgBJ,eAAhB,CAAgCE,GAAhC;AACA,aAAOA,GAAP;AACD,KAJD;AAKD,GAPM,MAOA;AACL;AACAR,IAAAA,IAAI,CAACE,SAAL,CAAeC,KAAf,GAAuB,YAAW;AAChC,YAAM,IAAIQ,KAAJ,CAAU,qBAAV,CAAN;AACD,KAFD;AAGD;AACF,CArBD,MAqBO;AACL;AACA,MAAI;AACF,QAAIN,MAAM,GAAGO,OAAO,CAAC,QAAQ,KAAT,CAApB;;AAEAZ,IAAAA,IAAI,CAACE,SAAL,CAAeC,KAAf,GAAuB,SAASA,KAAT,CAAeI,CAAf,EAAkB;AACvC,aAAOF,MAAM,CAACQ,WAAP,CAAmBN,CAAnB,CAAP;AACD,KAFD;AAGD,GAND,CAME,OAAOO,CAAP,EAAU;AACV;AACAd,IAAAA,IAAI,CAACE,SAAL,CAAeC,KAAf,GAAuB,SAASA,KAAT,CAAeI,CAAf,EAAkB;AACvC,UAAIQ,GAAG,GAAG,IAAIN,UAAJ,CAAeF,CAAf,CAAV;;AACA,WAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,GAAG,CAACE,MAAxB,EAAgCD,CAAC,EAAjC,EACED,GAAG,CAACC,CAAD,CAAH,GAAS,KAAKlB,IAAL,CAAUoB,OAAV,EAAT;;AACF,aAAOH,GAAP;AACD,KALD;AAMD;AACF","sourcesContent":["var r;\n\nmodule.exports = function rand(len) {\n  if (!r)\n    r = new Rand(null);\n\n  return r.generate(len);\n};\n\nfunction Rand(rand) {\n  this.rand = rand;\n}\nmodule.exports.Rand = Rand;\n\nRand.prototype.generate = function generate(len) {\n  return this._rand(len);\n};\n\nif (typeof window === 'object') {\n  if (window.crypto && window.crypto.getRandomValues) {\n    // Modern browsers\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      window.crypto.getRandomValues(arr);\n      return arr;\n    };\n  } else if (window.msCrypto && window.msCrypto.getRandomValues) {\n    // IE\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      window.msCrypto.getRandomValues(arr);\n      return arr;\n    };\n  } else {\n    // Old junk\n    Rand.prototype._rand = function() {\n      throw new Error('Not implemented yet');\n    };\n  }\n} else {\n  // Node.js or Web worker\n  try {\n    var crypto = require('cry' + 'pto');\n\n    Rand.prototype._rand = function _rand(n) {\n      return crypto.randomBytes(n);\n    };\n  } catch (e) {\n    // Emulate crypto API using randy\n    Rand.prototype._rand = function _rand(n) {\n      var res = new Uint8Array(n);\n      for (var i = 0; i < res.length; i++)\n        res[i] = this.rand.getByte();\n      return res;\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"script"}