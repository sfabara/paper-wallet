{"ast":null,"code":"(function (module, exports) {\n  'use strict'; // Utils\n\n  function assert(val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  } // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n\n\n  function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n\n    var TempCtor = function () {};\n\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  } // BN\n\n\n  function BN(number, base, endian) {\n    // May be `new BN(bn)` ?\n    if (number !== null && typeof number === 'object' && Array.isArray(number.words)) {\n      return number;\n    }\n\n    this.sign = false;\n    this.words = null;\n    this.length = 0; // Reduction context\n\n    this.red = null;\n\n    if (base === 'le' || base === 'be') {\n      endian = base;\n      base = 10;\n    }\n\n    if (number !== null) this._init(number || 0, base || 10, endian || 'be');\n  }\n\n  if (typeof module === 'object') module.exports = BN;else exports.BN = BN;\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  BN.prototype._init = function init(number, base, endian) {\n    if (typeof number === 'number') {\n      if (number < 0) {\n        this.sign = true;\n        number = -number;\n      }\n\n      if (number < 0x4000000) {\n        this.words = [number & 0x3ffffff];\n        this.length = 1;\n      } else if (number < 0x10000000000000) {\n        this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff];\n        this.length = 2;\n      } else {\n        assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n\n        this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff, 1];\n        this.length = 3;\n      }\n\n      return;\n    } else if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') base = 16;\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') start++;\n    if (base === 16) this._parseHex(number, start);else this._parseBase(number, base, start);\n    if (number[0] === '-') this.sign = true;\n    this.strip();\n  };\n\n  BN.prototype._initArray = function _initArray(number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) this.words[i] = 0;\n\n    var off = 0;\n\n    if (endian === 'be') {\n      for (var i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        var w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;\n        this.words[j] |= w << off & 0x3ffffff;\n        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n        off += 24;\n\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (var i = 0, j = 0; i < number.length; i += 3) {\n        var w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;\n        this.words[j] |= w << off & 0x3ffffff;\n        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n        off += 24;\n\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n\n    return this.strip();\n  };\n\n  function parseHex(str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n      r <<= 4; // 'a' - 'f'\n\n      if (c >= 49 && c <= 54) r |= c - 49 + 0xa; // 'A' - 'F'\n      else if (c >= 17 && c <= 22) r |= c - 17 + 0xa; // '0' - '9'\n      else r |= c & 0xf;\n    }\n\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex(number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) this.words[i] = 0; // Scan 24-bit chunks and add them to the number\n\n\n    var off = 0;\n\n    for (var i = number.length - 6, j = 0; i >= start; i -= 6) {\n      var w = parseHex(number, i, i + 6);\n      this.words[j] |= w << off & 0x3ffffff;\n      this.words[j + 1] |= w >>> 26 - off & 0x3fffff;\n      off += 24;\n\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n\n    if (i + 6 !== start) {\n      var w = parseHex(number, start, i + 6);\n      this.words[j] |= w << off & 0x3ffffff;\n      this.words[j + 1] |= w >>> 26 - off & 0x3fffff;\n    }\n\n    this.strip();\n  };\n\n  function parseBase(str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n      r *= mul; // 'a'\n\n      if (c >= 49) r += c - 49 + 0xa; // 'A'\n      else if (c >= 17) r += c - 17 + 0xa; // '0' - '9'\n      else r += c;\n    }\n\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase(number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1; // Find length of limb in base\n\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) limbLen++;\n\n    limbLen--;\n    limbPow = limbPow / base | 0;\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n    var word = 0;\n\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) this.words[0] += word;else this._iaddn(word);\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      var word = parseBase(number, i, number.length, base);\n\n      for (var i = 0; i < mod; i++) pow *= base;\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) this.words[0] += word;else this._iaddn(word);\n    }\n  };\n\n  BN.prototype.copy = function copy(dest) {\n    dest.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) dest.words[i] = this.words[i];\n\n    dest.length = this.length;\n    dest.sign = this.sign;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone() {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  }; // Remove leading `0` from `this`\n\n\n  BN.prototype.strip = function strip() {\n    while (this.length > 1 && this.words[this.length - 1] === 0) this.length--;\n\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign() {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) this.sign = false;\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect() {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n  /*\n  \n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n  \n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n  \n  */\n\n\n  var zeros = ['', '0', '00', '000', '0000', '00000', '000000', '0000000', '00000000', '000000000', '0000000000', '00000000000', '000000000000', '0000000000000', '00000000000000', '000000000000000', '0000000000000000', '00000000000000000', '000000000000000000', '0000000000000000000', '00000000000000000000', '000000000000000000000', '0000000000000000000000', '00000000000000000000000', '000000000000000000000000', '0000000000000000000000000'];\n  var groupSizes = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5];\n  var groupBases = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];\n\n  BN.prototype.toString = function toString(base, padding) {\n    base = base || 10;\n\n    if (base === 16 || base === 'hex') {\n      var out = '';\n      var off = 0;\n      var padding = padding | 0 || 1;\n      var carry = 0;\n\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = ((w << off | carry) & 0xffffff).toString(16);\n        carry = w >>> 24 - off & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) out = zeros[6 - word.length] + word + out;else out = word + out;\n        off += 2;\n\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n\n      if (carry !== 0) out = carry.toString(16) + out;\n\n      while (out.length % padding !== 0) out = '0' + out;\n\n      if (this.sign) out = '-' + out;\n      return out;\n    } else if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base]; // var groupBase = Math.pow(base, groupSize);\n\n      var groupBase = groupBases[base];\n      var out = '';\n      var c = this.clone();\n      c.sign = false;\n\n      while (c.cmpn(0) !== 0) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n        if (c.cmpn(0) !== 0) out = zeros[groupSize - r.length] + r + out;else out = r + out;\n      }\n\n      if (this.cmpn(0) === 0) out = '0' + out;\n      if (this.sign) out = '-' + out;\n      return out;\n    } else {\n      assert(false, 'Base should be between 2 and 36');\n    }\n  };\n\n  BN.prototype.toJSON = function toJSON() {\n    return this.toString(16);\n  };\n\n  BN.prototype.toArray = function toArray() {\n    this.strip();\n    var res = new Array(this.byteLength());\n    res[0] = 0;\n    var q = this.clone();\n\n    for (var i = 0; q.cmpn(0) !== 0; i++) {\n      var b = q.andln(0xff);\n      q.ishrn(8); // Assume big-endian\n\n      res[res.length - i - 1] = b;\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits(w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits(w) {\n      var t = w;\n      var r = 0;\n\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits(w) {\n    // Short-cut\n    if (w === 0) return 26;\n    var t = w;\n    var r = 0;\n\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n\n    if ((t & 0x1) === 0) r++;\n    return r;\n  }; // Return number of used bits in a BN\n\n\n  BN.prototype.bitLength = function bitLength() {\n    var hi = 0;\n    var w = this.words[this.length - 1];\n\n    var hi = this._countBits(w);\n\n    return (this.length - 1) * 26 + hi;\n  }; // Number of trailing zero bits\n\n\n  BN.prototype.zeroBits = function zeroBits() {\n    if (this.cmpn(0) === 0) return 0;\n    var r = 0;\n\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n\n      r += b;\n      if (b !== 26) break;\n    }\n\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength() {\n    return Math.ceil(this.bitLength() / 8);\n  }; // Return negative clone of `this`\n\n\n  BN.prototype.neg = function neg() {\n    if (this.cmpn(0) === 0) return this.clone();\n    var r = this.clone();\n    r.sign = !this.sign;\n    return r;\n  }; // Or `num` with `this` in-place\n\n\n  BN.prototype.ior = function ior(num) {\n    this.sign = this.sign || num.sign;\n\n    while (this.length < num.length) this.words[this.length++] = 0;\n\n    for (var i = 0; i < num.length; i++) this.words[i] = this.words[i] | num.words[i];\n\n    return this.strip();\n  }; // Or `num` with `this`\n\n\n  BN.prototype.or = function or(num) {\n    if (this.length > num.length) return this.clone().ior(num);else return num.clone().ior(this);\n  }; // And `num` with `this` in-place\n\n\n  BN.prototype.iand = function iand(num) {\n    this.sign = this.sign && num.sign; // b = min-length(num, this)\n\n    var b;\n    if (this.length > num.length) b = num;else b = this;\n\n    for (var i = 0; i < b.length; i++) this.words[i] = this.words[i] & num.words[i];\n\n    this.length = b.length;\n    return this.strip();\n  }; // And `num` with `this`\n\n\n  BN.prototype.and = function and(num) {\n    if (this.length > num.length) return this.clone().iand(num);else return num.clone().iand(this);\n  }; // Xor `num` with `this` in-place\n\n\n  BN.prototype.ixor = function ixor(num) {\n    this.sign = this.sign || num.sign; // a.length > b.length\n\n    var a;\n    var b;\n\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) this.words[i] = a.words[i] ^ b.words[i];\n\n    if (this !== a) for (; i < a.length; i++) this.words[i] = a.words[i];\n    this.length = a.length;\n    return this.strip();\n  }; // Xor `num` with `this`\n\n\n  BN.prototype.xor = function xor(num) {\n    if (this.length > num.length) return this.clone().ixor(num);else return num.clone().ixor(this);\n  }; // Set `bit` of `this`\n\n\n  BN.prototype.setn = function setn(bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var off = bit / 26 | 0;\n    var wbit = bit % 26;\n\n    while (this.length <= off) this.words[this.length++] = 0;\n\n    if (val) this.words[off] = this.words[off] | 1 << wbit;else this.words[off] = this.words[off] & ~(1 << wbit);\n    return this.strip();\n  }; // Add `num` to `this` in-place\n\n\n  BN.prototype.iadd = function iadd(num) {\n    // negative + positive\n    if (this.sign && !num.sign) {\n      this.sign = false;\n      var r = this.isub(num);\n      this.sign = !this.sign;\n      return this._normSign(); // positive + negative\n    } else if (!this.sign && num.sign) {\n      num.sign = false;\n      var r = this.isub(num);\n      num.sign = true;\n      return r._normSign();\n    } // a.length > b.length\n\n\n    var a;\n    var b;\n\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n\n    for (var i = 0; i < b.length; i++) {\n      var r = a.words[i] + b.words[i] + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    for (; carry !== 0 && i < a.length; i++) {\n      var r = a.words[i] + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++; // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) this.words[i] = a.words[i];\n    }\n\n    return this;\n  }; // Add `num` to `this`\n\n\n  BN.prototype.add = function add(num) {\n    if (num.sign && !this.sign) {\n      num.sign = false;\n      var res = this.sub(num);\n      num.sign = true;\n      return res;\n    } else if (!num.sign && this.sign) {\n      this.sign = false;\n      var res = num.sub(this);\n      this.sign = true;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);else return num.clone().iadd(this);\n  }; // Subtract `num` from `this` in-place\n\n\n  BN.prototype.isub = function isub(num) {\n    // this - (-num) = this + num\n    if (num.sign) {\n      num.sign = false;\n      var r = this.iadd(num);\n      num.sign = true;\n      return r._normSign(); // -this - num = -(this + num)\n    } else if (this.sign) {\n      this.sign = false;\n      this.iadd(num);\n      this.sign = true;\n      return this._normSign();\n    } // At this point both numbers are positive\n\n\n    var cmp = this.cmp(num); // Optimization - zeroify\n\n    if (cmp === 0) {\n      this.sign = false;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    } // a > b\n\n\n    var a;\n    var b;\n\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n\n    for (var i = 0; i < b.length; i++) {\n      var r = a.words[i] - b.words[i] + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    for (; carry !== 0 && i < a.length; i++) {\n      var r = a.words[i] + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    } // Copy rest of the words\n\n\n    if (carry === 0 && i < a.length && a !== this) for (; i < a.length; i++) this.words[i] = a.words[i];\n    this.length = Math.max(this.length, i);\n    if (a !== this) this.sign = true;\n    return this.strip();\n  }; // Subtract `num` from `this`\n\n\n  BN.prototype.sub = function sub(num) {\n    return this.clone().isub(num);\n  };\n  /*\n  // NOTE: This could be potentionally used to generate loop-less multiplications\n  function _genCombMulTo(alen, blen) {\n    var len = alen + blen - 1;\n    var src = [\n      'var a = this.words, b = num.words, o = out.words, c = 0, w, ' +\n          'mask = 0x3ffffff, shift = 0x4000000;',\n      'out.length = ' + len + ';'\n    ];\n    for (var k = 0; k < len; k++) {\n      var minJ = Math.max(0, k - alen + 1);\n      var maxJ = Math.min(k, blen - 1);\n  \n      for (var j = minJ; j <= maxJ; j++) {\n        var i = k - j;\n        var mul = 'a[' + i + '] * b[' + j + ']';\n  \n        if (j === minJ) {\n          src.push('w = ' + mul + ' + c;');\n          src.push('c = (w / shift) | 0;');\n        } else {\n          src.push('w += ' + mul + ';');\n          src.push('c += (w / shift) | 0;');\n        }\n        src.push('w &= mask;');\n      }\n      src.push('o[' + k + '] = w;');\n    }\n    src.push('if (c !== 0) {',\n             '  o[' + k + '] = c;',\n             '  out.length++;',\n             '}',\n             'return out;');\n  \n    return src.join('\\n');\n  }\n  */\n\n\n  BN.prototype._smallMulTo = function _smallMulTo(num, out) {\n    out.sign = num.sign !== this.sign;\n    out.length = this.length + num.length;\n    var carry = 0;\n\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n\n      for (var j = Math.max(0, k - this.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = this.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n        var lo = r & 0x3ffffff;\n        ncarry = ncarry + (r / 0x4000000 | 0) | 0;\n        lo = lo + rword | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = ncarry + (lo >>> 26) | 0;\n      }\n\n      out.words[k] = rword;\n      carry = ncarry;\n    }\n\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  };\n\n  BN.prototype._bigMulTo = function _bigMulTo(num, out) {\n    out.sign = num.sign !== this.sign;\n    out.length = this.length + num.length;\n    var carry = 0;\n    var hncarry = 0;\n\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n\n      for (var j = Math.max(0, k - this.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = this.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n        var lo = r & 0x3ffffff;\n        ncarry = ncarry + (r / 0x4000000 | 0) | 0;\n        lo = lo + rword | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = ncarry + (lo >>> 26) | 0;\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  };\n\n  BN.prototype.mulTo = function mulTo(num, out) {\n    var res;\n    if (this.length + num.length < 63) res = this._smallMulTo(num, out);else res = this._bigMulTo(num, out);\n    return res;\n  }; // Multiply `this` by `num`\n\n\n  BN.prototype.mul = function mul(num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  }; // In-place Multiplication\n\n\n  BN.prototype.imul = function imul(num) {\n    if (this.cmpn(0) === 0 || num.cmpn(0) === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n      return this;\n    }\n\n    var tlen = this.length;\n    var nlen = num.length;\n    this.sign = num.sign !== this.sign;\n    this.length = this.length + num.length;\n    this.words[this.length - 1] = 0;\n\n    for (var k = this.length - 2; k >= 0; k--) {\n      // Sum all words with the same `i + j = k` and accumulate `carry`,\n      // note that carry could be >= 0x3ffffff\n      var carry = 0;\n      var rword = 0;\n      var maxJ = Math.min(k, nlen - 1);\n\n      for (var j = Math.max(0, k - tlen + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = this.words[i];\n        var b = num.words[j];\n        var r = a * b;\n        var lo = r & 0x3ffffff;\n        carry += r / 0x4000000 | 0;\n        lo += rword;\n        rword = lo & 0x3ffffff;\n        carry += lo >>> 26;\n      }\n\n      this.words[k] = rword;\n      this.words[k + 1] += carry;\n      carry = 0;\n    } // Propagate overflows\n\n\n    var carry = 0;\n\n    for (var i = 1; i < this.length; i++) {\n      var w = this.words[i] + carry;\n      this.words[i] = w & 0x3ffffff;\n      carry = w >>> 26;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.imuln = function imuln(num) {\n    assert(typeof num === 'number'); // Carry\n\n    var carry = 0;\n\n    for (var i = 0; i < this.length; i++) {\n      var w = this.words[i] * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += w / 0x4000000 | 0; // NOTE: lo is 27bit maximum\n\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  }; // `this` * `this`\n\n\n  BN.prototype.sqr = function sqr() {\n    return this.mul(this);\n  }; // `this` * `this` in-place\n\n\n  BN.prototype.isqr = function isqr() {\n    return this.mul(this);\n  }; // Shift-left in-place\n\n\n  BN.prototype.ishln = function ishln(bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = 0x3ffffff >>> 26 - r << 26 - r;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (var i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = this.words[i] - newCarry << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> 26 - r;\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (var i = this.length - 1; i >= 0; i--) this.words[i + s] = this.words[i];\n\n      for (var i = 0; i < s; i++) this.words[i] = 0;\n\n      this.length += s;\n    }\n\n    return this.strip();\n  }; // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n\n\n  BN.prototype.ishrn = function ishrn(bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) h = (hint - hint % 26) / 26;else h = 0;\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n    var maskedWords = extended;\n    h -= s;\n    h = Math.max(0, h); // Extended mode, copy masked part\n\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) maskedWords.words[i] = this.words[i];\n\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {// No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n\n      for (var i = 0; i < this.length; i++) this.words[i] = this.words[i + s];\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n\n    for (var i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i];\n      this.words[i] = carry << 26 - r | word >>> r;\n      carry = word & mask;\n    } // Push carried bits as a mask\n\n\n    if (maskedWords && carry !== 0) maskedWords.words[maskedWords.length++] = carry;\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    this.strip();\n    return this;\n  }; // Shift-left\n\n\n  BN.prototype.shln = function shln(bits) {\n    return this.clone().ishln(bits);\n  }; // Shift-right\n\n\n  BN.prototype.shrn = function shrn(bits) {\n    return this.clone().ishrn(bits);\n  }; // Test if n bit is set\n\n\n  BN.prototype.testn = function testn(bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r; // Fast case: bit is much higher than all existing words\n\n    if (this.length <= s) {\n      return false;\n    } // Check bit and return\n\n\n    var w = this.words[s];\n    return !!(w & q);\n  }; // Return only lowers bits of number (in-place)\n\n\n  BN.prototype.imaskn = function imaskn(bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    assert(!this.sign, 'imaskn works only with positive numbers');\n    if (r !== 0) s++;\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  }; // Return only lowers bits of number\n\n\n  BN.prototype.maskn = function maskn(bits) {\n    return this.clone().imaskn(bits);\n  }; // Add plain number `num` to `this`\n\n\n  BN.prototype.iaddn = function iaddn(num) {\n    assert(typeof num === 'number');\n    if (num < 0) return this.isubn(-num); // Possible sign change\n\n    if (this.sign) {\n      if (this.length === 1 && this.words[0] < num) {\n        this.words[0] = num - this.words[0];\n        this.sign = false;\n        return this;\n      }\n\n      this.sign = false;\n      this.isubn(num);\n      this.sign = true;\n      return this;\n    } // Add without checks\n\n\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn(num) {\n    this.words[0] += num; // Carry\n\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) this.words[i + 1] = 1;else this.words[i + 1]++;\n    }\n\n    this.length = Math.max(this.length, i + 1);\n    return this;\n  }; // Subtract plain number `num` from `this`\n\n\n  BN.prototype.isubn = function isubn(num) {\n    assert(typeof num === 'number');\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.sign) {\n      this.sign = false;\n      this.iaddn(num);\n      this.sign = true;\n      return this;\n    }\n\n    this.words[0] -= num; // Carry\n\n    for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n      this.words[i] += 0x4000000;\n      this.words[i + 1] -= 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn(num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn(num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs() {\n    this.sign = false;\n    return this;\n  };\n\n  BN.prototype.abs = function abs() {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {\n    // Bigger storage is needed\n    var len = num.length + shift;\n    var i;\n\n    if (this.words.length < len) {\n      var t = new Array(len);\n\n      for (var i = 0; i < this.length; i++) t[i] = this.words[i];\n\n      this.words = t;\n    } else {\n      i = this.length;\n    } // Zeroify rest\n\n\n    this.length = Math.max(this.length, len);\n\n    for (; i < this.length; i++) this.words[i] = 0;\n\n    var carry = 0;\n\n    for (var i = 0; i < num.length; i++) {\n      var w = this.words[i + shift] + carry;\n      var right = num.words[i] * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - (right / 0x4000000 | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    for (; i < this.length - shift; i++) {\n      var w = this.words[i + shift] + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip(); // Subtraction overflow\n\n    assert(carry === -1);\n    carry = 0;\n\n    for (var i = 0; i < this.length; i++) {\n      var w = -this.words[i] + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n\n    this.sign = true;\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv(num, mode) {\n    var shift = this.length - num.length;\n    var a = this.clone();\n    var b = num; // Normalize\n\n    var bhi = b.words[b.length - 1];\n\n    var bhiBits = this._countBits(bhi);\n\n    shift = 26 - bhiBits;\n\n    if (shift !== 0) {\n      b = b.shln(shift);\n      a.ishln(shift);\n      bhi = b.words[b.length - 1];\n    } // Initialize quotient\n\n\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n\n      for (var i = 0; i < q.length; i++) q.words[i] = 0;\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n\n    if (!diff.sign) {\n      a = diff;\n      if (q) q.words[m] = 1;\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = a.words[b.length + j] * 0x4000000 + a.words[b.length + j - 1]; // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n\n      qj = Math.min(qj / bhi | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n\n      while (a.sign) {\n        qj--;\n        a.sign = false;\n\n        a._ishlnsubmul(b, 1, j);\n\n        if (a.cmpn(0) !== 0) a.sign = !a.sign;\n      }\n\n      if (q) q.words[j] = qj;\n    }\n\n    if (q) q.strip();\n    a.strip(); // Denormalize\n\n    if (mode !== 'div' && shift !== 0) a.ishrn(shift);\n    return {\n      div: q ? q : null,\n      mod: a\n    };\n  };\n\n  BN.prototype.divmod = function divmod(num, mode) {\n    assert(num.cmpn(0) !== 0);\n\n    if (this.sign && !num.sign) {\n      var res = this.neg().divmod(num, mode);\n      var div;\n      var mod;\n      if (mode !== 'mod') div = res.div.neg();\n      if (mode !== 'div') mod = res.mod.cmpn(0) === 0 ? res.mod : num.sub(res.mod);\n      return {\n        div: div,\n        mod: mod\n      };\n    } else if (!this.sign && num.sign) {\n      var res = this.divmod(num.neg(), mode);\n      var div;\n      if (mode !== 'mod') div = res.div.neg();\n      return {\n        div: div,\n        mod: res.mod\n      };\n    } else if (this.sign && num.sign) {\n      return this.neg().divmod(num.neg(), mode);\n    } // Both numbers are positive at this point\n    // Strip both numbers to approximate shift value\n\n\n    if (num.length > this.length || this.cmp(num) < 0) return {\n      div: new BN(0),\n      mod: this\n    }; // Very short reduction\n\n    if (num.length === 1) {\n      if (mode === 'div') return {\n        div: this.divn(num.words[0]),\n        mod: null\n      };else if (mode === 'mod') return {\n        div: null,\n        mod: new BN(this.modn(num.words[0]))\n      };\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  }; // Find `this` / `num`\n\n\n  BN.prototype.div = function div(num) {\n    return this.divmod(num, 'div').div;\n  }; // Find `this` % `num`\n\n\n  BN.prototype.mod = function mod(num) {\n    return this.divmod(num, 'mod').mod;\n  }; // Find Round(`this` / `num`)\n\n\n  BN.prototype.divRound = function divRound(num) {\n    var dm = this.divmod(num); // Fast case - exact division\n\n    if (dm.mod.cmpn(0) === 0) return dm.div;\n    var mod = dm.div.sign ? dm.mod.isub(num) : dm.mod;\n    var half = num.shrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half); // Round down\n\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div; // Round up\n\n    return dm.div.sign ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn(num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n    var acc = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) acc = (p * acc + this.words[i]) % num;\n\n    return acc;\n  }; // In-place division by number\n\n\n  BN.prototype.idivn = function idivn(num) {\n    assert(num <= 0x3ffffff);\n    var carry = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = this.words[i] + carry * 0x4000000;\n      this.words[i] = w / num | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn(num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd(p) {\n    assert(!p.sign);\n    assert(p.cmpn(0) !== 0);\n    var x = this;\n    var y = p.clone();\n    if (x.sign) x = x.mod(p);else x = x.clone(); // A * x + B * y = x\n\n    var A = new BN(1);\n    var B = new BN(0); // C * x + D * y = y\n\n    var C = new BN(0);\n    var D = new BN(1);\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.ishrn(1);\n      y.ishrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (x.cmpn(0) !== 0) {\n      while (x.isEven()) {\n        x.ishrn(1);\n\n        if (A.isEven() && B.isEven()) {\n          A.ishrn(1);\n          B.ishrn(1);\n        } else {\n          A.iadd(yp).ishrn(1);\n          B.isub(xp).ishrn(1);\n        }\n      }\n\n      while (y.isEven()) {\n        y.ishrn(1);\n\n        if (C.isEven() && D.isEven()) {\n          C.ishrn(1);\n          D.ishrn(1);\n        } else {\n          C.iadd(yp).ishrn(1);\n          D.isub(xp).ishrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.ishln(g)\n    };\n  }; // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n\n\n  BN.prototype._invmp = function _invmp(p) {\n    assert(!p.sign);\n    assert(p.cmpn(0) !== 0);\n    var a = this;\n    var b = p.clone();\n    if (a.sign) a = a.mod(p);else a = a.clone();\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      while (a.isEven()) {\n        a.ishrn(1);\n        if (x1.isEven()) x1.ishrn(1);else x1.iadd(delta).ishrn(1);\n      }\n\n      while (b.isEven()) {\n        b.ishrn(1);\n        if (x2.isEven()) x2.ishrn(1);else x2.iadd(delta).ishrn(1);\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    if (a.cmpn(1) === 0) return x1;else return x2;\n  };\n\n  BN.prototype.gcd = function gcd(num) {\n    if (this.cmpn(0) === 0) return num.clone();\n    if (num.cmpn(0) === 0) return this.clone();\n    var a = this.clone();\n    var b = num.clone();\n    a.sign = false;\n    b.sign = false; // Remove common factor of two\n\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.ishrn(1);\n      b.ishrn(1);\n    }\n\n    do {\n      while (a.isEven()) a.ishrn(1);\n\n      while (b.isEven()) b.ishrn(1);\n\n      var r = a.cmp(b);\n\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.ishln(shift);\n  }; // Invert number in the field F(num)\n\n\n  BN.prototype.invm = function invm(num) {\n    return this.egcd(num).a.mod(num);\n  };\n\n  BN.prototype.isEven = function isEven() {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd() {\n    return (this.words[0] & 1) === 1;\n  }; // And first word and num\n\n\n  BN.prototype.andln = function andln(num) {\n    return this.words[0] & num;\n  }; // Increment at the bit position in-line\n\n\n  BN.prototype.bincn = function bincn(bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r; // Fast case: bit is much higher than all existing words\n\n    if (this.length <= s) {\n      for (var i = this.length; i < s + 1; i++) this.words[i] = 0;\n\n      this.words[s] |= q;\n      this.length = s + 1;\n      return this;\n    } // Add bit and propagate, if needed\n\n\n    var carry = q;\n\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i];\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.cmpn = function cmpn(num) {\n    var sign = num < 0;\n    if (sign) num = -num;\n    if (this.sign && !sign) return -1;else if (!this.sign && sign) return 1;\n    num &= 0x3ffffff;\n    this.strip();\n    var res;\n\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      var w = this.words[0];\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n\n    if (this.sign) res = -res;\n    return res;\n  }; // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n\n\n  BN.prototype.cmp = function cmp(num) {\n    if (this.sign && !num.sign) return -1;else if (!this.sign && num.sign) return 1;\n    var res = this.ucmp(num);\n    if (this.sign) return -res;else return res;\n  }; // Unsigned comparison\n\n\n  BN.prototype.ucmp = function ucmp(num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;else if (this.length < num.length) return -1;\n    var res = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i];\n      var b = num.words[i];\n      if (a === b) continue;\n      if (a < b) res = -1;else if (a > b) res = 1;\n      break;\n    }\n\n    return res;\n  }; //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n\n\n  BN.red = function red(num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed(ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(!this.sign, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed() {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed(ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed(ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd(num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd(num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub(num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub(num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl(num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul(num) {\n    assert(this.red, 'redMul works only with red numbers');\n\n    this.red._verify2(this, num);\n\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul(num) {\n    assert(this.red, 'redMul works only with red numbers');\n\n    this.red._verify2(this, num);\n\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr() {\n    assert(this.red, 'redSqr works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr() {\n    assert(this.red, 'redISqr works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.isqr(this);\n  }; // Square root over p\n\n\n  BN.prototype.redSqrt = function redSqrt() {\n    assert(this.red, 'redSqrt works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm() {\n    assert(this.red, 'redInvm works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.invm(this);\n  }; // Return negative clone of `this` % `red modulo`\n\n\n  BN.prototype.redNeg = function redNeg() {\n    assert(this.red, 'redNeg works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow(num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n\n    this.red._verify1(this);\n\n    return this.red.pow(this, num);\n  }; // Prime numbers with efficient reduction\n\n\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  }; // Pseudo-Mersenne prime\n\n  function MPrime(name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).ishln(this.n).isub(this.p);\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp() {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce(num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split(input, out) {\n    input.ishrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK(num) {\n    return num.imul(this.k);\n  };\n\n  function K256() {\n    MPrime.call(this, 'k256', 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split(input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n    var outLen = Math.min(input.length, 9);\n\n    for (var i = 0; i < outLen; i++) output.words[i] = input.words[i];\n\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    } // Shift by 9 limbs\n\n\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (var i = 10; i < input.length; i++) {\n      var next = input.words[i];\n      input.words[i - 10] = (next & mask) << 4 | prev >>> 22;\n      prev = next;\n    }\n\n    input.words[i - 10] = prev >>> 22;\n    input.length -= 9;\n  };\n\n  K256.prototype.imulK = function imulK(num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2; // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n\n    var hi;\n    var lo = 0;\n\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i];\n      hi = w * 0x40;\n      lo += w * 0x3d1;\n      hi += lo / 0x4000000 | 0;\n      lo &= 0x3ffffff;\n      num.words[i] = lo;\n      lo = hi;\n    } // Fast length reduction\n\n\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) num.length--;\n    }\n\n    return num;\n  };\n\n  function P224() {\n    MPrime.call(this, 'p224', 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n\n  inherits(P224, MPrime);\n\n  function P192() {\n    MPrime.call(this, 'p192', 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n\n  inherits(P192, MPrime);\n\n  function P25519() {\n    // 2 ^ 255 - 19\n    MPrime.call(this, '25519', '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK(num) {\n    // K = 0x13\n    var carry = 0;\n\n    for (var i = 0; i < num.length; i++) {\n      var hi = num.words[i] * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n      num.words[i] = lo;\n      carry = hi;\n    }\n\n    if (carry !== 0) num.words[num.length++] = carry;\n    return num;\n  }; // Exported mostly for testing purposes, use plain name instead\n\n\n  BN._prime = function prime(name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n    var prime;\n    if (name === 'k256') prime = new K256();else if (name === 'p224') prime = new P224();else if (name === 'p192') prime = new P192();else if (name === 'p25519') prime = new P25519();else throw new Error('Unknown prime ' + name);\n    primes[name] = prime;\n    return prime;\n  }; //\n  // Base reduction engine\n  //\n\n\n  function Red(m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1(a) {\n    assert(!a.sign, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2(a, b) {\n    assert(!a.sign && !b.sign, 'red works only with positives');\n    assert(a.red && a.red === b.red, 'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod(a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.mod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg(a) {\n    var r = a.clone();\n    r.sign = !r.sign;\n    return r.iadd(this.m)._forceRed(this);\n  };\n\n  Red.prototype.add = function add(a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) res.isub(this.m);\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd(a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) res.isub(this.m);\n    return res;\n  };\n\n  Red.prototype.sub = function sub(a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) res.iadd(this.m);\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub(a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) res.iadd(this.m);\n    return res;\n  };\n\n  Red.prototype.shl = function shl(a, num) {\n    this._verify1(a);\n\n    return this.imod(a.shln(num));\n  };\n\n  Red.prototype.imul = function imul(a, b) {\n    this._verify2(a, b);\n\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul(a, b) {\n    this._verify2(a, b);\n\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr(a) {\n    return this.imul(a, a);\n  };\n\n  Red.prototype.sqr = function sqr(a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt(a) {\n    if (a.cmpn(0) === 0) return a.clone();\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1); // Fast case\n\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).ishrn(2);\n      var r = this.pow(a, pow);\n      return r;\n    } // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n\n\n    var q = this.m.subn(1);\n    var s = 0;\n\n    while (q.cmpn(0) !== 0 && q.andln(1) === 0) {\n      s++;\n      q.ishrn(1);\n    }\n\n    assert(q.cmpn(0) !== 0);\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg(); // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n\n    var lpow = this.m.subn(1).ishrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) z.redIAdd(nOne);\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).ishrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n\n      for (var i = 0; tmp.cmp(one) !== 0; i++) tmp = tmp.redSqr();\n\n      assert(i < m);\n      var b = this.pow(c, new BN(1).ishln(m - i - 1));\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm(a) {\n    var inv = a._invmp(this.m);\n\n    if (inv.sign) {\n      inv.sign = false;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow(a, num) {\n    var w = [];\n    if (num.cmpn(0) === 0) return new BN(1);\n    var q = num.clone();\n\n    while (q.cmpn(0) !== 0) {\n      w.push(q.andln(1));\n      q.ishrn(1);\n    } // Skip leading zeroes\n\n\n    var res = a;\n\n    for (var i = 0; i < w.length; i++, res = this.sqr(res)) if (w[i] !== 0) break;\n\n    if (++i < w.length) {\n      for (var q = this.sqr(res); i < w.length; i++, q = this.sqr(q)) {\n        if (w[i] === 0) continue;\n        res = this.mul(res, q);\n      }\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo(num) {\n    return num.clone();\n  };\n\n  Red.prototype.convertFrom = function convertFrom(num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  }; //\n  // Montgomery method engine\n  //\n\n\n  BN.mont = function mont(num) {\n    return new Mont(num);\n  };\n\n  function Mont(m) {\n    Red.call(this, m);\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) this.shift += 26 - this.shift % 26;\n    this.r = new BN(1).ishln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv.sign = true;\n    this.minv = this.minv.mod(this.r);\n  }\n\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo(num) {\n    return this.imod(num.shln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom(num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul(a, b) {\n    if (a.cmpn(0) === 0 || b.cmpn(0) === 0) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).ishrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) res = u.isub(this.m);else if (u.cmpn(0) < 0) res = u.iadd(this.m);\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul(a, b) {\n    if (a.cmpn(0) === 0 || b.cmpn(0) === 0) return new BN(0)._forceRed(this);\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).ishrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) res = u.isub(this.m);else if (u.cmpn(0) < 0) res = u.iadd(this.m);\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm(a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);","map":{"version":3,"sources":["/home/user/Desktop/react-wallet/node_modules/bitcore-lib-litecoin/node_modules/bn.js/lib/bn.js"],"names":["module","exports","assert","val","msg","Error","inherits","ctor","superCtor","super_","TempCtor","prototype","constructor","BN","number","base","endian","Array","isArray","words","sign","length","red","_init","wordSize","init","_initArray","toString","replace","start","_parseHex","_parseBase","strip","Math","ceil","i","off","j","w","parseHex","str","end","r","len","min","c","charCodeAt","parseBase","mul","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","dest","clone","_normSign","inspect","zeros","groupSizes","groupBases","padding","out","carry","groupSize","groupBase","cmpn","modn","idivn","toJSON","toArray","res","byteLength","q","b","andln","ishrn","clz32","_countBits","t","_zeroBits","bitLength","hi","zeroBits","neg","ior","num","or","iand","and","ixor","a","xor","setn","bit","wbit","iadd","isub","add","sub","cmp","max","_smallMulTo","k","ncarry","rword","maxJ","lo","_bigMulTo","hncarry","mulTo","imul","tlen","nlen","sqr","isqr","ishln","bits","s","carryMask","newCarry","hint","extended","h","mask","maskedWords","shln","shrn","testn","imaskn","maskn","iaddn","isubn","addn","subn","iabs","abs","_ishlnsubmul","shift","right","_wordDiv","mode","bhi","bhiBits","m","diff","qj","div","divmod","divn","divRound","dm","half","r2","p","acc","egcd","x","y","A","B","C","D","g","isEven","yp","xp","gcd","_invmp","x1","x2","delta","invm","isOdd","bincn","ucmp","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","name","n","tmp","_tmp","ireduce","rlen","split","imulK","input","K256","call","output","outLen","prev","next","P224","P192","P25519","_prime","prime","imod","mod3","one","nOne","lpow","z","inv","push","mont","Mont","rinv","minv","u"],"mappings":"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","sourcesContent":["(function (module, exports) {\n\n'use strict';\n\n// Utils\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\n// Could use `inherits` module, but don't want to move from single file\n// architecture yet.\nfunction inherits(ctor, superCtor) {\n  ctor.super_ = superCtor;\n  var TempCtor = function () {};\n  TempCtor.prototype = superCtor.prototype;\n  ctor.prototype = new TempCtor();\n  ctor.prototype.constructor = ctor;\n}\n\n// BN\n\nfunction BN(number, base, endian) {\n  // May be `new BN(bn)` ?\n  if (number !== null &&\n      typeof number === 'object' &&\n      Array.isArray(number.words)) {\n    return number;\n  }\n\n  this.sign = false;\n  this.words = null;\n  this.length = 0;\n\n  // Reduction context\n  this.red = null;\n\n  if (base === 'le' || base === 'be') {\n    endian = base;\n    base = 10;\n  }\n\n  if (number !== null)\n    this._init(number || 0, base || 10, endian || 'be');\n}\nif (typeof module === 'object')\n  module.exports = BN;\nelse\n  exports.BN = BN;\n\nBN.BN = BN;\nBN.wordSize = 26;\n\nBN.prototype._init = function init(number, base, endian) {\n  if (typeof number === 'number') {\n    if (number < 0) {\n      this.sign = true;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n    return;\n  } else if (typeof number === 'object') {\n    return this._initArray(number, base, endian);\n  }\n  if (base === 'hex')\n    base = 16;\n  assert(base === (base | 0) && base >= 2 && base <= 36);\n\n  number = number.toString().replace(/\\s+/g, '');\n  var start = 0;\n  if (number[0] === '-')\n    start++;\n\n  if (base === 16)\n    this._parseHex(number, start);\n  else\n    this._parseBase(number, base, start);\n\n  if (number[0] === '-')\n    this.sign = true;\n\n  this.strip();\n};\n\nBN.prototype._initArray = function _initArray(number, base, endian) {\n  // Perhaps a Uint8Array\n  assert(typeof number.length === 'number');\n  if (number.length <= 0) {\n    this.words = [ 0 ];\n    this.length = 1;\n    return this;\n  }\n\n  this.length = Math.ceil(number.length / 3);\n  this.words = new Array(this.length);\n  for (var i = 0; i < this.length; i++)\n    this.words[i] = 0;\n\n  var off = 0;\n  if (endian === 'be') {\n    for (var i = number.length - 1, j = 0; i >= 0; i -= 3) {\n      var w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n  } else if (endian === 'le') {\n    for (var i = 0, j = 0; i < number.length; i += 3) {\n      var w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n  }\n  return this.strip();\n};\n\nfunction parseHex(str, start, end) {\n  var r = 0;\n  var len = Math.min(str.length, end);\n  for (var i = start; i < len; i++) {\n    var c = str.charCodeAt(i) - 48;\n\n    r <<= 4;\n\n    // 'a' - 'f'\n    if (c >= 49 && c <= 54)\n      r |= c - 49 + 0xa;\n\n    // 'A' - 'F'\n    else if (c >= 17 && c <= 22)\n      r |= c - 17 + 0xa;\n\n    // '0' - '9'\n    else\n      r |= c & 0xf;\n  }\n  return r;\n}\n\nBN.prototype._parseHex = function _parseHex(number, start) {\n  // Create possibly bigger array to ensure that it fits the number\n  this.length = Math.ceil((number.length - start) / 6);\n  this.words = new Array(this.length);\n  for (var i = 0; i < this.length; i++)\n    this.words[i] = 0;\n\n  // Scan 24-bit chunks and add them to the number\n  var off = 0;\n  for (var i = number.length - 6, j = 0; i >= start; i -= 6) {\n    var w = parseHex(number, i, i + 6);\n    this.words[j] |= (w << off) & 0x3ffffff;\n    this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    off += 24;\n    if (off >= 26) {\n      off -= 26;\n      j++;\n    }\n  }\n  if (i + 6 !== start) {\n    var w = parseHex(number, start, i + 6);\n    this.words[j] |= (w << off) & 0x3ffffff;\n    this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n  }\n  this.strip();\n};\n\nfunction parseBase(str, start, end, mul) {\n  var r = 0;\n  var len = Math.min(str.length, end);\n  for (var i = start; i < len; i++) {\n    var c = str.charCodeAt(i) - 48;\n\n    r *= mul;\n\n    // 'a'\n    if (c >= 49)\n      r += c - 49 + 0xa;\n\n    // 'A'\n    else if (c >= 17)\n      r += c - 17 + 0xa;\n\n    // '0' - '9'\n    else\n      r += c;\n  }\n  return r;\n}\n\nBN.prototype._parseBase = function _parseBase(number, base, start) {\n  // Initialize as zero\n  this.words = [ 0 ];\n  this.length = 1;\n\n  // Find length of limb in base\n  for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base)\n    limbLen++;\n  limbLen--;\n  limbPow = (limbPow / base) | 0;\n\n  var total = number.length - start;\n  var mod = total % limbLen;\n  var end = Math.min(total, total - mod) + start;\n\n  var word = 0;\n  for (var i = start; i < end; i += limbLen) {\n    word = parseBase(number, i, i + limbLen, base);\n\n    this.imuln(limbPow);\n    if (this.words[0] + word < 0x4000000)\n      this.words[0] += word;\n    else\n      this._iaddn(word);\n  }\n\n  if (mod !== 0) {\n    var pow = 1;\n    var word = parseBase(number, i, number.length, base);\n\n    for (var i = 0; i < mod; i++)\n      pow *= base;\n    this.imuln(pow);\n    if (this.words[0] + word < 0x4000000)\n      this.words[0] += word;\n    else\n      this._iaddn(word);\n  }\n};\n\nBN.prototype.copy = function copy(dest) {\n  dest.words = new Array(this.length);\n  for (var i = 0; i < this.length; i++)\n    dest.words[i] = this.words[i];\n  dest.length = this.length;\n  dest.sign = this.sign;\n  dest.red = this.red;\n};\n\nBN.prototype.clone = function clone() {\n  var r = new BN(null);\n  this.copy(r);\n  return r;\n};\n\n// Remove leading `0` from `this`\nBN.prototype.strip = function strip() {\n  while (this.length > 1 && this.words[this.length - 1] === 0)\n    this.length--;\n  return this._normSign();\n};\n\nBN.prototype._normSign = function _normSign() {\n  // -0 = 0\n  if (this.length === 1 && this.words[0] === 0)\n    this.sign = false;\n  return this;\n};\n\nBN.prototype.inspect = function inspect() {\n  return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n};\n\n/*\n\nvar zeros = [];\nvar groupSizes = [];\nvar groupBases = [];\n\nvar s = '';\nvar i = -1;\nwhile (++i < BN.wordSize) {\n  zeros[i] = s;\n  s += '0';\n}\ngroupSizes[0] = 0;\ngroupSizes[1] = 0;\ngroupBases[0] = 0;\ngroupBases[1] = 0;\nvar base = 2 - 1;\nwhile (++base < 36 + 1) {\n  var groupSize = 0;\n  var groupBase = 1;\n  while (groupBase < (1 << BN.wordSize) / base) {\n    groupBase *= base;\n    groupSize += 1;\n  }\n  groupSizes[base] = groupSize;\n  groupBases[base] = groupBase;\n}\n\n*/\n\nvar zeros = [\n  '',\n  '0',\n  '00',\n  '000',\n  '0000',\n  '00000',\n  '000000',\n  '0000000',\n  '00000000',\n  '000000000',\n  '0000000000',\n  '00000000000',\n  '000000000000',\n  '0000000000000',\n  '00000000000000',\n  '000000000000000',\n  '0000000000000000',\n  '00000000000000000',\n  '000000000000000000',\n  '0000000000000000000',\n  '00000000000000000000',\n  '000000000000000000000',\n  '0000000000000000000000',\n  '00000000000000000000000',\n  '000000000000000000000000',\n  '0000000000000000000000000'\n];\n\nvar groupSizes = [\n  0, 0,\n  25, 16, 12, 11, 10, 9, 8,\n  8, 7, 7, 7, 7, 6, 6,\n  6, 6, 6, 6, 6, 5, 5,\n  5, 5, 5, 5, 5, 5, 5,\n  5, 5, 5, 5, 5, 5, 5\n];\n\nvar groupBases = [\n  0, 0,\n  33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n  43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n  16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n  6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n  24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n];\n\nBN.prototype.toString = function toString(base, padding) {\n  base = base || 10;\n  if (base === 16 || base === 'hex') {\n    var out = '';\n    var off = 0;\n    var padding = padding | 0 || 1;\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = this.words[i];\n      var word = (((w << off) | carry) & 0xffffff).toString(16);\n      carry = (w >>> (24 - off)) & 0xffffff;\n      if (carry !== 0 || i !== this.length - 1)\n        out = zeros[6 - word.length] + word + out;\n      else\n        out = word + out;\n      off += 2;\n      if (off >= 26) {\n        off -= 26;\n        i--;\n      }\n    }\n    if (carry !== 0)\n      out = carry.toString(16) + out;\n    while (out.length % padding !== 0)\n      out = '0' + out;\n    if (this.sign)\n      out = '-' + out;\n    return out;\n  } else if (base === (base | 0) && base >= 2 && base <= 36) {\n    // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n    var groupSize = groupSizes[base];\n    // var groupBase = Math.pow(base, groupSize);\n    var groupBase = groupBases[base];\n    var out = '';\n    var c = this.clone();\n    c.sign = false;\n    while (c.cmpn(0) !== 0) {\n      var r = c.modn(groupBase).toString(base);\n      c = c.idivn(groupBase);\n\n      if (c.cmpn(0) !== 0)\n        out = zeros[groupSize - r.length] + r + out;\n      else\n        out = r + out;\n    }\n    if (this.cmpn(0) === 0)\n      out = '0' + out;\n    if (this.sign)\n      out = '-' + out;\n    return out;\n  } else {\n    assert(false, 'Base should be between 2 and 36');\n  }\n};\n\nBN.prototype.toJSON = function toJSON() {\n  return this.toString(16);\n};\n\nBN.prototype.toArray = function toArray() {\n  this.strip();\n  var res = new Array(this.byteLength());\n  res[0] = 0;\n\n  var q = this.clone();\n  for (var i = 0; q.cmpn(0) !== 0; i++) {\n    var b = q.andln(0xff);\n    q.ishrn(8);\n\n    // Assume big-endian\n    res[res.length - i - 1] = b;\n  }\n\n  return res;\n};\n\nif (Math.clz32) {\n  BN.prototype._countBits = function _countBits(w) {\n    return 32 - Math.clz32(w);\n  };\n} else {\n  BN.prototype._countBits = function _countBits(w) {\n    var t = w;\n    var r = 0;\n    if (t >= 0x1000) {\n      r += 13;\n      t >>>= 13;\n    }\n    if (t >= 0x40) {\n      r += 7;\n      t >>>= 7;\n    }\n    if (t >= 0x8) {\n      r += 4;\n      t >>>= 4;\n    }\n    if (t >= 0x02) {\n      r += 2;\n      t >>>= 2;\n    }\n    return r + t;\n  };\n}\n\nBN.prototype._zeroBits = function _zeroBits(w) {\n  // Short-cut\n  if (w === 0)\n    return 26;\n\n  var t = w;\n  var r = 0;\n  if ((t & 0x1fff) === 0) {\n    r += 13;\n    t >>>= 13;\n  }\n  if ((t & 0x7f) === 0) {\n    r += 7;\n    t >>>= 7;\n  }\n  if ((t & 0xf) === 0) {\n    r += 4;\n    t >>>= 4;\n  }\n  if ((t & 0x3) === 0) {\n    r += 2;\n    t >>>= 2;\n  }\n  if ((t & 0x1) === 0)\n    r++;\n  return r;\n};\n\n// Return number of used bits in a BN\nBN.prototype.bitLength = function bitLength() {\n  var hi = 0;\n  var w = this.words[this.length - 1];\n  var hi = this._countBits(w);\n  return (this.length - 1) * 26 + hi;\n};\n\n// Number of trailing zero bits\nBN.prototype.zeroBits = function zeroBits() {\n  if (this.cmpn(0) === 0)\n    return 0;\n\n  var r = 0;\n  for (var i = 0; i < this.length; i++) {\n    var b = this._zeroBits(this.words[i]);\n    r += b;\n    if (b !== 26)\n      break;\n  }\n  return r;\n};\n\nBN.prototype.byteLength = function byteLength() {\n  return Math.ceil(this.bitLength() / 8);\n};\n\n// Return negative clone of `this`\nBN.prototype.neg = function neg() {\n  if (this.cmpn(0) === 0)\n    return this.clone();\n\n  var r = this.clone();\n  r.sign = !this.sign;\n  return r;\n};\n\n\n// Or `num` with `this` in-place\nBN.prototype.ior = function ior(num) {\n  this.sign = this.sign || num.sign;\n\n  while (this.length < num.length)\n    this.words[this.length++] = 0;\n\n  for (var i = 0; i < num.length; i++)\n    this.words[i] = this.words[i] | num.words[i];\n\n  return this.strip();\n};\n\n\n// Or `num` with `this`\nBN.prototype.or = function or(num) {\n  if (this.length > num.length)\n    return this.clone().ior(num);\n  else\n    return num.clone().ior(this);\n};\n\n\n// And `num` with `this` in-place\nBN.prototype.iand = function iand(num) {\n  this.sign = this.sign && num.sign;\n\n  // b = min-length(num, this)\n  var b;\n  if (this.length > num.length)\n    b = num;\n  else\n    b = this;\n\n  for (var i = 0; i < b.length; i++)\n    this.words[i] = this.words[i] & num.words[i];\n\n  this.length = b.length;\n\n  return this.strip();\n};\n\n\n// And `num` with `this`\nBN.prototype.and = function and(num) {\n  if (this.length > num.length)\n    return this.clone().iand(num);\n  else\n    return num.clone().iand(this);\n};\n\n\n// Xor `num` with `this` in-place\nBN.prototype.ixor = function ixor(num) {\n  this.sign = this.sign || num.sign;\n\n  // a.length > b.length\n  var a;\n  var b;\n  if (this.length > num.length) {\n    a = this;\n    b = num;\n  } else {\n    a = num;\n    b = this;\n  }\n\n  for (var i = 0; i < b.length; i++)\n    this.words[i] = a.words[i] ^ b.words[i];\n\n  if (this !== a)\n    for (; i < a.length; i++)\n      this.words[i] = a.words[i];\n\n  this.length = a.length;\n\n  return this.strip();\n};\n\n\n// Xor `num` with `this`\nBN.prototype.xor = function xor(num) {\n  if (this.length > num.length)\n    return this.clone().ixor(num);\n  else\n    return num.clone().ixor(this);\n};\n\n\n// Set `bit` of `this`\nBN.prototype.setn = function setn(bit, val) {\n  assert(typeof bit === 'number' && bit >= 0);\n\n  var off = (bit / 26) | 0;\n  var wbit = bit % 26;\n\n  while (this.length <= off)\n    this.words[this.length++] = 0;\n\n  if (val)\n    this.words[off] = this.words[off] | (1 << wbit);\n  else\n    this.words[off] = this.words[off] & ~(1 << wbit);\n\n  return this.strip();\n};\n\n\n// Add `num` to `this` in-place\nBN.prototype.iadd = function iadd(num) {\n  // negative + positive\n  if (this.sign && !num.sign) {\n    this.sign = false;\n    var r = this.isub(num);\n    this.sign = !this.sign;\n    return this._normSign();\n\n  // positive + negative\n  } else if (!this.sign && num.sign) {\n    num.sign = false;\n    var r = this.isub(num);\n    num.sign = true;\n    return r._normSign();\n  }\n\n  // a.length > b.length\n  var a;\n  var b;\n  if (this.length > num.length) {\n    a = this;\n    b = num;\n  } else {\n    a = num;\n    b = this;\n  }\n\n  var carry = 0;\n  for (var i = 0; i < b.length; i++) {\n    var r = a.words[i] + b.words[i] + carry;\n    this.words[i] = r & 0x3ffffff;\n    carry = r >>> 26;\n  }\n  for (; carry !== 0 && i < a.length; i++) {\n    var r = a.words[i] + carry;\n    this.words[i] = r & 0x3ffffff;\n    carry = r >>> 26;\n  }\n\n  this.length = a.length;\n  if (carry !== 0) {\n    this.words[this.length] = carry;\n    this.length++;\n  // Copy the rest of the words\n  } else if (a !== this) {\n    for (; i < a.length; i++)\n      this.words[i] = a.words[i];\n  }\n\n  return this;\n};\n\n// Add `num` to `this`\nBN.prototype.add = function add(num) {\n  if (num.sign && !this.sign) {\n    num.sign = false;\n    var res = this.sub(num);\n    num.sign = true;\n    return res;\n  } else if (!num.sign && this.sign) {\n    this.sign = false;\n    var res = num.sub(this);\n    this.sign = true;\n    return res;\n  }\n\n  if (this.length > num.length)\n    return this.clone().iadd(num);\n  else\n    return num.clone().iadd(this);\n};\n\n// Subtract `num` from `this` in-place\nBN.prototype.isub = function isub(num) {\n  // this - (-num) = this + num\n  if (num.sign) {\n    num.sign = false;\n    var r = this.iadd(num);\n    num.sign = true;\n    return r._normSign();\n\n  // -this - num = -(this + num)\n  } else if (this.sign) {\n    this.sign = false;\n    this.iadd(num);\n    this.sign = true;\n    return this._normSign();\n  }\n\n  // At this point both numbers are positive\n  var cmp = this.cmp(num);\n\n  // Optimization - zeroify\n  if (cmp === 0) {\n    this.sign = false;\n    this.length = 1;\n    this.words[0] = 0;\n    return this;\n  }\n\n  // a > b\n  var a;\n  var b;\n  if (cmp > 0) {\n    a = this;\n    b = num;\n  } else {\n    a = num;\n    b = this;\n  }\n\n  var carry = 0;\n  for (var i = 0; i < b.length; i++) {\n    var r = a.words[i] - b.words[i] + carry;\n    carry = r >> 26;\n    this.words[i] = r & 0x3ffffff;\n  }\n  for (; carry !== 0 && i < a.length; i++) {\n    var r = a.words[i] + carry;\n    carry = r >> 26;\n    this.words[i] = r & 0x3ffffff;\n  }\n\n  // Copy rest of the words\n  if (carry === 0 && i < a.length && a !== this)\n    for (; i < a.length; i++)\n      this.words[i] = a.words[i];\n  this.length = Math.max(this.length, i);\n\n  if (a !== this)\n    this.sign = true;\n\n  return this.strip();\n};\n\n// Subtract `num` from `this`\nBN.prototype.sub = function sub(num) {\n  return this.clone().isub(num);\n};\n\n/*\n// NOTE: This could be potentionally used to generate loop-less multiplications\nfunction _genCombMulTo(alen, blen) {\n  var len = alen + blen - 1;\n  var src = [\n    'var a = this.words, b = num.words, o = out.words, c = 0, w, ' +\n        'mask = 0x3ffffff, shift = 0x4000000;',\n    'out.length = ' + len + ';'\n  ];\n  for (var k = 0; k < len; k++) {\n    var minJ = Math.max(0, k - alen + 1);\n    var maxJ = Math.min(k, blen - 1);\n\n    for (var j = minJ; j <= maxJ; j++) {\n      var i = k - j;\n      var mul = 'a[' + i + '] * b[' + j + ']';\n\n      if (j === minJ) {\n        src.push('w = ' + mul + ' + c;');\n        src.push('c = (w / shift) | 0;');\n      } else {\n        src.push('w += ' + mul + ';');\n        src.push('c += (w / shift) | 0;');\n      }\n      src.push('w &= mask;');\n    }\n    src.push('o[' + k + '] = w;');\n  }\n  src.push('if (c !== 0) {',\n           '  o[' + k + '] = c;',\n           '  out.length++;',\n           '}',\n           'return out;');\n\n  return src.join('\\n');\n}\n*/\n\nBN.prototype._smallMulTo = function _smallMulTo(num, out) {\n  out.sign = num.sign !== this.sign;\n  out.length = this.length + num.length;\n\n  var carry = 0;\n  for (var k = 0; k < out.length - 1; k++) {\n    // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n    // note that ncarry could be >= 0x3ffffff\n    var ncarry = carry >>> 26;\n    var rword = carry & 0x3ffffff;\n    var maxJ = Math.min(k, num.length - 1);\n    for (var j = Math.max(0, k - this.length + 1); j <= maxJ; j++) {\n      var i = k - j;\n      var a = this.words[i] | 0;\n      var b = num.words[j] | 0;\n      var r = a * b;\n\n      var lo = r & 0x3ffffff;\n      ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n      lo = (lo + rword) | 0;\n      rword = lo & 0x3ffffff;\n      ncarry = (ncarry + (lo >>> 26)) | 0;\n    }\n    out.words[k] = rword;\n    carry = ncarry;\n  }\n  if (carry !== 0) {\n    out.words[k] = carry;\n  } else {\n    out.length--;\n  }\n\n  return out.strip();\n};\n\nBN.prototype._bigMulTo = function _bigMulTo(num, out) {\n  out.sign = num.sign !== this.sign;\n  out.length = this.length + num.length;\n\n  var carry = 0;\n  var hncarry = 0;\n  for (var k = 0; k < out.length - 1; k++) {\n    // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n    // note that ncarry could be >= 0x3ffffff\n    var ncarry = hncarry;\n    hncarry = 0;\n    var rword = carry & 0x3ffffff;\n    var maxJ = Math.min(k, num.length - 1);\n    for (var j = Math.max(0, k - this.length + 1); j <= maxJ; j++) {\n      var i = k - j;\n      var a = this.words[i] | 0;\n      var b = num.words[j] | 0;\n      var r = a * b;\n\n      var lo = r & 0x3ffffff;\n      ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n      lo = (lo + rword) | 0;\n      rword = lo & 0x3ffffff;\n      ncarry = (ncarry + (lo >>> 26)) | 0;\n\n      hncarry += ncarry >>> 26;\n      ncarry &= 0x3ffffff;\n    }\n    out.words[k] = rword;\n    carry = ncarry;\n    ncarry = hncarry;\n  }\n  if (carry !== 0) {\n    out.words[k] = carry;\n  } else {\n    out.length--;\n  }\n\n  return out.strip();\n};\n\nBN.prototype.mulTo = function mulTo(num, out) {\n  var res;\n  if (this.length + num.length < 63)\n    res = this._smallMulTo(num, out);\n  else\n    res = this._bigMulTo(num, out);\n  return res;\n};\n\n// Multiply `this` by `num`\nBN.prototype.mul = function mul(num) {\n  var out = new BN(null);\n  out.words = new Array(this.length + num.length);\n  return this.mulTo(num, out);\n};\n\n// In-place Multiplication\nBN.prototype.imul = function imul(num) {\n  if (this.cmpn(0) === 0 || num.cmpn(0) === 0) {\n    this.words[0] = 0;\n    this.length = 1;\n    return this;\n  }\n\n  var tlen = this.length;\n  var nlen = num.length;\n\n  this.sign = num.sign !== this.sign;\n  this.length = this.length + num.length;\n  this.words[this.length - 1] = 0;\n\n  for (var k = this.length - 2; k >= 0; k--) {\n    // Sum all words with the same `i + j = k` and accumulate `carry`,\n    // note that carry could be >= 0x3ffffff\n    var carry = 0;\n    var rword = 0;\n    var maxJ = Math.min(k, nlen - 1);\n    for (var j = Math.max(0, k - tlen + 1); j <= maxJ; j++) {\n      var i = k - j;\n      var a = this.words[i];\n      var b = num.words[j];\n      var r = a * b;\n\n      var lo = r & 0x3ffffff;\n      carry += (r / 0x4000000) | 0;\n      lo += rword;\n      rword = lo & 0x3ffffff;\n      carry += lo >>> 26;\n    }\n    this.words[k] = rword;\n    this.words[k + 1] += carry;\n    carry = 0;\n  }\n\n  // Propagate overflows\n  var carry = 0;\n  for (var i = 1; i < this.length; i++) {\n    var w = this.words[i] + carry;\n    this.words[i] = w & 0x3ffffff;\n    carry = w >>> 26;\n  }\n\n  return this.strip();\n};\n\nBN.prototype.imuln = function imuln(num) {\n  assert(typeof num === 'number');\n\n  // Carry\n  var carry = 0;\n  for (var i = 0; i < this.length; i++) {\n    var w = this.words[i] * num;\n    var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n    carry >>= 26;\n    carry += (w / 0x4000000) | 0;\n    // NOTE: lo is 27bit maximum\n    carry += lo >>> 26;\n    this.words[i] = lo & 0x3ffffff;\n  }\n\n  if (carry !== 0) {\n    this.words[i] = carry;\n    this.length++;\n  }\n\n  return this;\n};\n\n// `this` * `this`\nBN.prototype.sqr = function sqr() {\n  return this.mul(this);\n};\n\n// `this` * `this` in-place\nBN.prototype.isqr = function isqr() {\n  return this.mul(this);\n};\n\n// Shift-left in-place\nBN.prototype.ishln = function ishln(bits) {\n  assert(typeof bits === 'number' && bits >= 0);\n  var r = bits % 26;\n  var s = (bits - r) / 26;\n  var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n\n  if (r !== 0) {\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var newCarry = this.words[i] & carryMask;\n      var c = (this.words[i] - newCarry) << r;\n      this.words[i] = c | carry;\n      carry = newCarry >>> (26 - r);\n    }\n    if (carry) {\n      this.words[i] = carry;\n      this.length++;\n    }\n  }\n\n  if (s !== 0) {\n    for (var i = this.length - 1; i >= 0; i--)\n      this.words[i + s] = this.words[i];\n    for (var i = 0; i < s; i++)\n      this.words[i] = 0;\n    this.length += s;\n  }\n\n  return this.strip();\n};\n\n// Shift-right in-place\n// NOTE: `hint` is a lowest bit before trailing zeroes\n// NOTE: if `extended` is present - it will be filled with destroyed bits\nBN.prototype.ishrn = function ishrn(bits, hint, extended) {\n  assert(typeof bits === 'number' && bits >= 0);\n  var h;\n  if (hint)\n    h = (hint - (hint % 26)) / 26;\n  else\n    h = 0;\n\n  var r = bits % 26;\n  var s = Math.min((bits - r) / 26, this.length);\n  var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n  var maskedWords = extended;\n\n  h -= s;\n  h = Math.max(0, h);\n\n  // Extended mode, copy masked part\n  if (maskedWords) {\n    for (var i = 0; i < s; i++)\n      maskedWords.words[i] = this.words[i];\n    maskedWords.length = s;\n  }\n\n  if (s === 0) {\n    // No-op, we should not move anything at all\n  } else if (this.length > s) {\n    this.length -= s;\n    for (var i = 0; i < this.length; i++)\n      this.words[i] = this.words[i + s];\n  } else {\n    this.words[0] = 0;\n    this.length = 1;\n  }\n\n  var carry = 0;\n  for (var i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n    var word = this.words[i];\n    this.words[i] = (carry << (26 - r)) | (word >>> r);\n    carry = word & mask;\n  }\n\n  // Push carried bits as a mask\n  if (maskedWords && carry !== 0)\n    maskedWords.words[maskedWords.length++] = carry;\n\n  if (this.length === 0) {\n    this.words[0] = 0;\n    this.length = 1;\n  }\n\n  this.strip();\n\n  return this;\n};\n\n// Shift-left\nBN.prototype.shln = function shln(bits) {\n  return this.clone().ishln(bits);\n};\n\n// Shift-right\nBN.prototype.shrn = function shrn(bits) {\n  return this.clone().ishrn(bits);\n};\n\n// Test if n bit is set\nBN.prototype.testn = function testn(bit) {\n  assert(typeof bit === 'number' && bit >= 0);\n  var r = bit % 26;\n  var s = (bit - r) / 26;\n  var q = 1 << r;\n\n  // Fast case: bit is much higher than all existing words\n  if (this.length <= s) {\n    return false;\n  }\n\n  // Check bit and return\n  var w = this.words[s];\n\n  return !!(w & q);\n};\n\n// Return only lowers bits of number (in-place)\nBN.prototype.imaskn = function imaskn(bits) {\n  assert(typeof bits === 'number' && bits >= 0);\n  var r = bits % 26;\n  var s = (bits - r) / 26;\n\n  assert(!this.sign, 'imaskn works only with positive numbers');\n\n  if (r !== 0)\n    s++;\n  this.length = Math.min(s, this.length);\n\n  if (r !== 0) {\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    this.words[this.length - 1] &= mask;\n  }\n\n  return this.strip();\n};\n\n// Return only lowers bits of number\nBN.prototype.maskn = function maskn(bits) {\n  return this.clone().imaskn(bits);\n};\n\n// Add plain number `num` to `this`\nBN.prototype.iaddn = function iaddn(num) {\n  assert(typeof num === 'number');\n  if (num < 0)\n    return this.isubn(-num);\n\n  // Possible sign change\n  if (this.sign) {\n    if (this.length === 1 && this.words[0] < num) {\n      this.words[0] = num - this.words[0];\n      this.sign = false;\n      return this;\n    }\n\n    this.sign = false;\n    this.isubn(num);\n    this.sign = true;\n    return this;\n  }\n\n  // Add without checks\n  return this._iaddn(num);\n};\n\nBN.prototype._iaddn = function _iaddn(num) {\n  this.words[0] += num;\n\n  // Carry\n  for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n    this.words[i] -= 0x4000000;\n    if (i === this.length - 1)\n      this.words[i + 1] = 1;\n    else\n      this.words[i + 1]++;\n  }\n  this.length = Math.max(this.length, i + 1);\n\n  return this;\n};\n\n// Subtract plain number `num` from `this`\nBN.prototype.isubn = function isubn(num) {\n  assert(typeof num === 'number');\n  if (num < 0)\n    return this.iaddn(-num);\n\n  if (this.sign) {\n    this.sign = false;\n    this.iaddn(num);\n    this.sign = true;\n    return this;\n  }\n\n  this.words[0] -= num;\n\n  // Carry\n  for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n    this.words[i] += 0x4000000;\n    this.words[i + 1] -= 1;\n  }\n\n  return this.strip();\n};\n\nBN.prototype.addn = function addn(num) {\n  return this.clone().iaddn(num);\n};\n\nBN.prototype.subn = function subn(num) {\n  return this.clone().isubn(num);\n};\n\nBN.prototype.iabs = function iabs() {\n  this.sign = false;\n\n  return this;\n};\n\nBN.prototype.abs = function abs() {\n  return this.clone().iabs();\n};\n\nBN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {\n  // Bigger storage is needed\n  var len = num.length + shift;\n  var i;\n  if (this.words.length < len) {\n    var t = new Array(len);\n    for (var i = 0; i < this.length; i++)\n      t[i] = this.words[i];\n    this.words = t;\n  } else {\n    i = this.length;\n  }\n\n  // Zeroify rest\n  this.length = Math.max(this.length, len);\n  for (; i < this.length; i++)\n    this.words[i] = 0;\n\n  var carry = 0;\n  for (var i = 0; i < num.length; i++) {\n    var w = this.words[i + shift] + carry;\n    var right = num.words[i] * mul;\n    w -= right & 0x3ffffff;\n    carry = (w >> 26) - ((right / 0x4000000) | 0);\n    this.words[i + shift] = w & 0x3ffffff;\n  }\n  for (; i < this.length - shift; i++) {\n    var w = this.words[i + shift] + carry;\n    carry = w >> 26;\n    this.words[i + shift] = w & 0x3ffffff;\n  }\n\n  if (carry === 0)\n    return this.strip();\n\n  // Subtraction overflow\n  assert(carry === -1);\n  carry = 0;\n  for (var i = 0; i < this.length; i++) {\n    var w = -this.words[i] + carry;\n    carry = w >> 26;\n    this.words[i] = w & 0x3ffffff;\n  }\n  this.sign = true;\n\n  return this.strip();\n};\n\nBN.prototype._wordDiv = function _wordDiv(num, mode) {\n  var shift = this.length - num.length;\n\n  var a = this.clone();\n  var b = num;\n\n  // Normalize\n  var bhi = b.words[b.length - 1];\n  var bhiBits = this._countBits(bhi);\n  shift = 26 - bhiBits;\n  if (shift !== 0) {\n    b = b.shln(shift);\n    a.ishln(shift);\n    bhi = b.words[b.length - 1];\n  }\n\n  // Initialize quotient\n  var m = a.length - b.length;\n  var q;\n\n  if (mode !== 'mod') {\n    q = new BN(null);\n    q.length = m + 1;\n    q.words = new Array(q.length);\n    for (var i = 0; i < q.length; i++)\n      q.words[i] = 0;\n  }\n\n  var diff = a.clone()._ishlnsubmul(b, 1, m);\n  if (!diff.sign) {\n    a = diff;\n    if (q)\n      q.words[m] = 1;\n  }\n\n  for (var j = m - 1; j >= 0; j--) {\n    var qj = a.words[b.length + j] * 0x4000000 + a.words[b.length + j - 1];\n\n    // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n    // (0x7ffffff)\n    qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n    a._ishlnsubmul(b, qj, j);\n    while (a.sign) {\n      qj--;\n      a.sign = false;\n      a._ishlnsubmul(b, 1, j);\n      if (a.cmpn(0) !== 0)\n        a.sign = !a.sign;\n    }\n    if (q)\n      q.words[j] = qj;\n  }\n  if (q)\n    q.strip();\n  a.strip();\n\n  // Denormalize\n  if (mode !== 'div' && shift !== 0)\n    a.ishrn(shift);\n  return { div: q ? q : null, mod: a };\n};\n\nBN.prototype.divmod = function divmod(num, mode) {\n  assert(num.cmpn(0) !== 0);\n\n  if (this.sign && !num.sign) {\n    var res = this.neg().divmod(num, mode);\n    var div;\n    var mod;\n    if (mode !== 'mod')\n      div = res.div.neg();\n    if (mode !== 'div')\n      mod = res.mod.cmpn(0) === 0 ? res.mod : num.sub(res.mod);\n    return {\n      div: div,\n      mod: mod\n    };\n  } else if (!this.sign && num.sign) {\n    var res = this.divmod(num.neg(), mode);\n    var div;\n    if (mode !== 'mod')\n      div = res.div.neg();\n    return { div: div, mod: res.mod };\n  } else if (this.sign && num.sign) {\n    return this.neg().divmod(num.neg(), mode);\n  }\n\n  // Both numbers are positive at this point\n\n  // Strip both numbers to approximate shift value\n  if (num.length > this.length || this.cmp(num) < 0)\n    return { div: new BN(0), mod: this };\n\n  // Very short reduction\n  if (num.length === 1) {\n    if (mode === 'div')\n      return { div: this.divn(num.words[0]), mod: null };\n    else if (mode === 'mod')\n      return { div: null, mod: new BN(this.modn(num.words[0])) };\n    return {\n      div: this.divn(num.words[0]),\n      mod: new BN(this.modn(num.words[0]))\n    };\n  }\n\n  return this._wordDiv(num, mode);\n};\n\n// Find `this` / `num`\nBN.prototype.div = function div(num) {\n  return this.divmod(num, 'div').div;\n};\n\n// Find `this` % `num`\nBN.prototype.mod = function mod(num) {\n  return this.divmod(num, 'mod').mod;\n};\n\n// Find Round(`this` / `num`)\nBN.prototype.divRound = function divRound(num) {\n  var dm = this.divmod(num);\n\n  // Fast case - exact division\n  if (dm.mod.cmpn(0) === 0)\n    return dm.div;\n\n  var mod = dm.div.sign ? dm.mod.isub(num) : dm.mod;\n\n  var half = num.shrn(1);\n  var r2 = num.andln(1);\n  var cmp = mod.cmp(half);\n\n  // Round down\n  if (cmp < 0 || r2 === 1 && cmp === 0)\n    return dm.div;\n\n  // Round up\n  return dm.div.sign ? dm.div.isubn(1) : dm.div.iaddn(1);\n};\n\nBN.prototype.modn = function modn(num) {\n  assert(num <= 0x3ffffff);\n  var p = (1 << 26) % num;\n\n  var acc = 0;\n  for (var i = this.length - 1; i >= 0; i--)\n    acc = (p * acc + this.words[i]) % num;\n\n  return acc;\n};\n\n// In-place division by number\nBN.prototype.idivn = function idivn(num) {\n  assert(num <= 0x3ffffff);\n\n  var carry = 0;\n  for (var i = this.length - 1; i >= 0; i--) {\n    var w = this.words[i] + carry * 0x4000000;\n    this.words[i] = (w / num) | 0;\n    carry = w % num;\n  }\n\n  return this.strip();\n};\n\nBN.prototype.divn = function divn(num) {\n  return this.clone().idivn(num);\n};\n\nBN.prototype.egcd = function egcd(p) {\n  assert(!p.sign);\n  assert(p.cmpn(0) !== 0);\n\n  var x = this;\n  var y = p.clone();\n\n  if (x.sign)\n    x = x.mod(p);\n  else\n    x = x.clone();\n\n  // A * x + B * y = x\n  var A = new BN(1);\n  var B = new BN(0);\n\n  // C * x + D * y = y\n  var C = new BN(0);\n  var D = new BN(1);\n\n  var g = 0;\n\n  while (x.isEven() && y.isEven()) {\n    x.ishrn(1);\n    y.ishrn(1);\n    ++g;\n  }\n\n  var yp = y.clone();\n  var xp = x.clone();\n\n  while (x.cmpn(0) !== 0) {\n    while (x.isEven()) {\n      x.ishrn(1);\n      if (A.isEven() && B.isEven()) {\n        A.ishrn(1);\n        B.ishrn(1);\n      } else {\n        A.iadd(yp).ishrn(1);\n        B.isub(xp).ishrn(1);\n      }\n    }\n\n    while (y.isEven()) {\n      y.ishrn(1);\n      if (C.isEven() && D.isEven()) {\n        C.ishrn(1);\n        D.ishrn(1);\n      } else {\n        C.iadd(yp).ishrn(1);\n        D.isub(xp).ishrn(1);\n      }\n    }\n\n    if (x.cmp(y) >= 0) {\n      x.isub(y);\n      A.isub(C);\n      B.isub(D);\n    } else {\n      y.isub(x);\n      C.isub(A);\n      D.isub(B);\n    }\n  }\n\n  return {\n    a: C,\n    b: D,\n    gcd: y.ishln(g)\n  };\n};\n\n// This is reduced incarnation of the binary EEA\n// above, designated to invert members of the\n// _prime_ fields F(p) at a maximal speed\nBN.prototype._invmp = function _invmp(p) {\n  assert(!p.sign);\n  assert(p.cmpn(0) !== 0);\n\n  var a = this;\n  var b = p.clone();\n\n  if (a.sign)\n    a = a.mod(p);\n  else\n    a = a.clone();\n\n  var x1 = new BN(1);\n  var x2 = new BN(0);\n\n  var delta = b.clone();\n\n  while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n    while (a.isEven()) {\n      a.ishrn(1);\n      if (x1.isEven())\n        x1.ishrn(1);\n      else\n        x1.iadd(delta).ishrn(1);\n    }\n    while (b.isEven()) {\n      b.ishrn(1);\n      if (x2.isEven())\n        x2.ishrn(1);\n      else\n        x2.iadd(delta).ishrn(1);\n    }\n    if (a.cmp(b) >= 0) {\n      a.isub(b);\n      x1.isub(x2);\n    } else {\n      b.isub(a);\n      x2.isub(x1);\n    }\n  }\n  if (a.cmpn(1) === 0)\n    return x1;\n  else\n    return x2;\n};\n\nBN.prototype.gcd = function gcd(num) {\n  if (this.cmpn(0) === 0)\n    return num.clone();\n  if (num.cmpn(0) === 0)\n    return this.clone();\n\n  var a = this.clone();\n  var b = num.clone();\n  a.sign = false;\n  b.sign = false;\n\n  // Remove common factor of two\n  for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n    a.ishrn(1);\n    b.ishrn(1);\n  }\n\n  do {\n    while (a.isEven())\n      a.ishrn(1);\n    while (b.isEven())\n      b.ishrn(1);\n\n    var r = a.cmp(b);\n    if (r < 0) {\n      // Swap `a` and `b` to make `a` always bigger than `b`\n      var t = a;\n      a = b;\n      b = t;\n    } else if (r === 0 || b.cmpn(1) === 0) {\n      break;\n    }\n\n    a.isub(b);\n  } while (true);\n\n  return b.ishln(shift);\n};\n\n// Invert number in the field F(num)\nBN.prototype.invm = function invm(num) {\n  return this.egcd(num).a.mod(num);\n};\n\nBN.prototype.isEven = function isEven() {\n  return (this.words[0] & 1) === 0;\n};\n\nBN.prototype.isOdd = function isOdd() {\n  return (this.words[0] & 1) === 1;\n};\n\n// And first word and num\nBN.prototype.andln = function andln(num) {\n  return this.words[0] & num;\n};\n\n// Increment at the bit position in-line\nBN.prototype.bincn = function bincn(bit) {\n  assert(typeof bit === 'number');\n  var r = bit % 26;\n  var s = (bit - r) / 26;\n  var q = 1 << r;\n\n  // Fast case: bit is much higher than all existing words\n  if (this.length <= s) {\n    for (var i = this.length; i < s + 1; i++)\n      this.words[i] = 0;\n    this.words[s] |= q;\n    this.length = s + 1;\n    return this;\n  }\n\n  // Add bit and propagate, if needed\n  var carry = q;\n  for (var i = s; carry !== 0 && i < this.length; i++) {\n    var w = this.words[i];\n    w += carry;\n    carry = w >>> 26;\n    w &= 0x3ffffff;\n    this.words[i] = w;\n  }\n  if (carry !== 0) {\n    this.words[i] = carry;\n    this.length++;\n  }\n  return this;\n};\n\nBN.prototype.cmpn = function cmpn(num) {\n  var sign = num < 0;\n  if (sign)\n    num = -num;\n\n  if (this.sign && !sign)\n    return -1;\n  else if (!this.sign && sign)\n    return 1;\n\n  num &= 0x3ffffff;\n  this.strip();\n\n  var res;\n  if (this.length > 1) {\n    res = 1;\n  } else {\n    var w = this.words[0];\n    res = w === num ? 0 : w < num ? -1 : 1;\n  }\n  if (this.sign)\n    res = -res;\n  return res;\n};\n\n// Compare two numbers and return:\n// 1 - if `this` > `num`\n// 0 - if `this` == `num`\n// -1 - if `this` < `num`\nBN.prototype.cmp = function cmp(num) {\n  if (this.sign && !num.sign)\n    return -1;\n  else if (!this.sign && num.sign)\n    return 1;\n\n  var res = this.ucmp(num);\n  if (this.sign)\n    return -res;\n  else\n    return res;\n};\n\n// Unsigned comparison\nBN.prototype.ucmp = function ucmp(num) {\n  // At this point both numbers have the same sign\n  if (this.length > num.length)\n    return 1;\n  else if (this.length < num.length)\n    return -1;\n\n  var res = 0;\n  for (var i = this.length - 1; i >= 0; i--) {\n    var a = this.words[i];\n    var b = num.words[i];\n\n    if (a === b)\n      continue;\n    if (a < b)\n      res = -1;\n    else if (a > b)\n      res = 1;\n    break;\n  }\n  return res;\n};\n\n//\n// A reduce context, could be using montgomery or something better, depending\n// on the `m` itself.\n//\nBN.red = function red(num) {\n  return new Red(num);\n};\n\nBN.prototype.toRed = function toRed(ctx) {\n  assert(!this.red, 'Already a number in reduction context');\n  assert(!this.sign, 'red works only with positives');\n  return ctx.convertTo(this)._forceRed(ctx);\n};\n\nBN.prototype.fromRed = function fromRed() {\n  assert(this.red, 'fromRed works only with numbers in reduction context');\n  return this.red.convertFrom(this);\n};\n\nBN.prototype._forceRed = function _forceRed(ctx) {\n  this.red = ctx;\n  return this;\n};\n\nBN.prototype.forceRed = function forceRed(ctx) {\n  assert(!this.red, 'Already a number in reduction context');\n  return this._forceRed(ctx);\n};\n\nBN.prototype.redAdd = function redAdd(num) {\n  assert(this.red, 'redAdd works only with red numbers');\n  return this.red.add(this, num);\n};\n\nBN.prototype.redIAdd = function redIAdd(num) {\n  assert(this.red, 'redIAdd works only with red numbers');\n  return this.red.iadd(this, num);\n};\n\nBN.prototype.redSub = function redSub(num) {\n  assert(this.red, 'redSub works only with red numbers');\n  return this.red.sub(this, num);\n};\n\nBN.prototype.redISub = function redISub(num) {\n  assert(this.red, 'redISub works only with red numbers');\n  return this.red.isub(this, num);\n};\n\nBN.prototype.redShl = function redShl(num) {\n  assert(this.red, 'redShl works only with red numbers');\n  return this.red.shl(this, num);\n};\n\nBN.prototype.redMul = function redMul(num) {\n  assert(this.red, 'redMul works only with red numbers');\n  this.red._verify2(this, num);\n  return this.red.mul(this, num);\n};\n\nBN.prototype.redIMul = function redIMul(num) {\n  assert(this.red, 'redMul works only with red numbers');\n  this.red._verify2(this, num);\n  return this.red.imul(this, num);\n};\n\nBN.prototype.redSqr = function redSqr() {\n  assert(this.red, 'redSqr works only with red numbers');\n  this.red._verify1(this);\n  return this.red.sqr(this);\n};\n\nBN.prototype.redISqr = function redISqr() {\n  assert(this.red, 'redISqr works only with red numbers');\n  this.red._verify1(this);\n  return this.red.isqr(this);\n};\n\n// Square root over p\nBN.prototype.redSqrt = function redSqrt() {\n  assert(this.red, 'redSqrt works only with red numbers');\n  this.red._verify1(this);\n  return this.red.sqrt(this);\n};\n\nBN.prototype.redInvm = function redInvm() {\n  assert(this.red, 'redInvm works only with red numbers');\n  this.red._verify1(this);\n  return this.red.invm(this);\n};\n\n// Return negative clone of `this` % `red modulo`\nBN.prototype.redNeg = function redNeg() {\n  assert(this.red, 'redNeg works only with red numbers');\n  this.red._verify1(this);\n  return this.red.neg(this);\n};\n\nBN.prototype.redPow = function redPow(num) {\n  assert(this.red && !num.red, 'redPow(normalNum)');\n  this.red._verify1(this);\n  return this.red.pow(this, num);\n};\n\n// Prime numbers with efficient reduction\nvar primes = {\n  k256: null,\n  p224: null,\n  p192: null,\n  p25519: null\n};\n\n// Pseudo-Mersenne prime\nfunction MPrime(name, p) {\n  // P = 2 ^ N - K\n  this.name = name;\n  this.p = new BN(p, 16);\n  this.n = this.p.bitLength();\n  this.k = new BN(1).ishln(this.n).isub(this.p);\n\n  this.tmp = this._tmp();\n}\n\nMPrime.prototype._tmp = function _tmp() {\n  var tmp = new BN(null);\n  tmp.words = new Array(Math.ceil(this.n / 13));\n  return tmp;\n};\n\nMPrime.prototype.ireduce = function ireduce(num) {\n  // Assumes that `num` is less than `P^2`\n  // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n  var r = num;\n  var rlen;\n\n  do {\n    this.split(r, this.tmp);\n    r = this.imulK(r);\n    r = r.iadd(this.tmp);\n    rlen = r.bitLength();\n  } while (rlen > this.n);\n\n  var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n  if (cmp === 0) {\n    r.words[0] = 0;\n    r.length = 1;\n  } else if (cmp > 0) {\n    r.isub(this.p);\n  } else {\n    r.strip();\n  }\n\n  return r;\n};\n\nMPrime.prototype.split = function split(input, out) {\n  input.ishrn(this.n, 0, out);\n};\n\nMPrime.prototype.imulK = function imulK(num) {\n  return num.imul(this.k);\n};\n\nfunction K256() {\n  MPrime.call(\n    this,\n    'k256',\n    'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n}\ninherits(K256, MPrime);\n\nK256.prototype.split = function split(input, output) {\n  // 256 = 9 * 26 + 22\n  var mask = 0x3fffff;\n\n  var outLen = Math.min(input.length, 9);\n  for (var i = 0; i < outLen; i++)\n    output.words[i] = input.words[i];\n  output.length = outLen;\n\n  if (input.length <= 9) {\n    input.words[0] = 0;\n    input.length = 1;\n    return;\n  }\n\n  // Shift by 9 limbs\n  var prev = input.words[9];\n  output.words[output.length++] = prev & mask;\n\n  for (var i = 10; i < input.length; i++) {\n    var next = input.words[i];\n    input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n    prev = next;\n  }\n  input.words[i - 10] = prev >>> 22;\n  input.length -= 9;\n};\n\nK256.prototype.imulK = function imulK(num) {\n  // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n  num.words[num.length] = 0;\n  num.words[num.length + 1] = 0;\n  num.length += 2;\n\n  // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n  var hi;\n  var lo = 0;\n  for (var i = 0; i < num.length; i++) {\n    var w = num.words[i];\n    hi = w * 0x40;\n    lo += w * 0x3d1;\n    hi += (lo / 0x4000000) | 0;\n    lo &= 0x3ffffff;\n\n    num.words[i] = lo;\n\n    lo = hi;\n  }\n\n  // Fast length reduction\n  if (num.words[num.length - 1] === 0) {\n    num.length--;\n    if (num.words[num.length - 1] === 0)\n      num.length--;\n  }\n  return num;\n};\n\nfunction P224() {\n  MPrime.call(\n    this,\n    'p224',\n    'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n}\ninherits(P224, MPrime);\n\nfunction P192() {\n  MPrime.call(\n    this,\n    'p192',\n    'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n}\ninherits(P192, MPrime);\n\nfunction P25519() {\n  // 2 ^ 255 - 19\n  MPrime.call(\n    this,\n    '25519',\n    '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n}\ninherits(P25519, MPrime);\n\nP25519.prototype.imulK = function imulK(num) {\n  // K = 0x13\n  var carry = 0;\n  for (var i = 0; i < num.length; i++) {\n    var hi = num.words[i] * 0x13 + carry;\n    var lo = hi & 0x3ffffff;\n    hi >>>= 26;\n\n    num.words[i] = lo;\n    carry = hi;\n  }\n  if (carry !== 0)\n    num.words[num.length++] = carry;\n  return num;\n};\n\n// Exported mostly for testing purposes, use plain name instead\nBN._prime = function prime(name) {\n  // Cached version of prime\n  if (primes[name])\n    return primes[name];\n\n  var prime;\n  if (name === 'k256')\n    prime = new K256();\n  else if (name === 'p224')\n    prime = new P224();\n  else if (name === 'p192')\n    prime = new P192();\n  else if (name === 'p25519')\n    prime = new P25519();\n  else\n    throw new Error('Unknown prime ' + name);\n  primes[name] = prime;\n\n  return prime;\n};\n\n//\n// Base reduction engine\n//\nfunction Red(m) {\n  if (typeof m === 'string') {\n    var prime = BN._prime(m);\n    this.m = prime.p;\n    this.prime = prime;\n  } else {\n    this.m = m;\n    this.prime = null;\n  }\n}\n\nRed.prototype._verify1 = function _verify1(a) {\n  assert(!a.sign, 'red works only with positives');\n  assert(a.red, 'red works only with red numbers');\n};\n\nRed.prototype._verify2 = function _verify2(a, b) {\n  assert(!a.sign && !b.sign, 'red works only with positives');\n  assert(a.red && a.red === b.red,\n         'red works only with red numbers');\n};\n\nRed.prototype.imod = function imod(a) {\n  if (this.prime)\n    return this.prime.ireduce(a)._forceRed(this);\n  return a.mod(this.m)._forceRed(this);\n};\n\nRed.prototype.neg = function neg(a) {\n  var r = a.clone();\n  r.sign = !r.sign;\n  return r.iadd(this.m)._forceRed(this);\n};\n\nRed.prototype.add = function add(a, b) {\n  this._verify2(a, b);\n\n  var res = a.add(b);\n  if (res.cmp(this.m) >= 0)\n    res.isub(this.m);\n  return res._forceRed(this);\n};\n\nRed.prototype.iadd = function iadd(a, b) {\n  this._verify2(a, b);\n\n  var res = a.iadd(b);\n  if (res.cmp(this.m) >= 0)\n    res.isub(this.m);\n  return res;\n};\n\nRed.prototype.sub = function sub(a, b) {\n  this._verify2(a, b);\n\n  var res = a.sub(b);\n  if (res.cmpn(0) < 0)\n    res.iadd(this.m);\n  return res._forceRed(this);\n};\n\nRed.prototype.isub = function isub(a, b) {\n  this._verify2(a, b);\n\n  var res = a.isub(b);\n  if (res.cmpn(0) < 0)\n    res.iadd(this.m);\n  return res;\n};\n\nRed.prototype.shl = function shl(a, num) {\n  this._verify1(a);\n  return this.imod(a.shln(num));\n};\n\nRed.prototype.imul = function imul(a, b) {\n  this._verify2(a, b);\n  return this.imod(a.imul(b));\n};\n\nRed.prototype.mul = function mul(a, b) {\n  this._verify2(a, b);\n  return this.imod(a.mul(b));\n};\n\nRed.prototype.isqr = function isqr(a) {\n  return this.imul(a, a);\n};\n\nRed.prototype.sqr = function sqr(a) {\n  return this.mul(a, a);\n};\n\nRed.prototype.sqrt = function sqrt(a) {\n  if (a.cmpn(0) === 0)\n    return a.clone();\n\n  var mod3 = this.m.andln(3);\n  assert(mod3 % 2 === 1);\n\n  // Fast case\n  if (mod3 === 3) {\n    var pow = this.m.add(new BN(1)).ishrn(2);\n    var r = this.pow(a, pow);\n    return r;\n  }\n\n  // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n  //\n  // Find Q and S, that Q * 2 ^ S = (P - 1)\n  var q = this.m.subn(1);\n  var s = 0;\n  while (q.cmpn(0) !== 0 && q.andln(1) === 0) {\n    s++;\n    q.ishrn(1);\n  }\n  assert(q.cmpn(0) !== 0);\n\n  var one = new BN(1).toRed(this);\n  var nOne = one.redNeg();\n\n  // Find quadratic non-residue\n  // NOTE: Max is such because of generalized Riemann hypothesis.\n  var lpow = this.m.subn(1).ishrn(1);\n  var z = this.m.bitLength();\n  z = new BN(2 * z * z).toRed(this);\n  while (this.pow(z, lpow).cmp(nOne) !== 0)\n    z.redIAdd(nOne);\n\n  var c = this.pow(z, q);\n  var r = this.pow(a, q.addn(1).ishrn(1));\n  var t = this.pow(a, q);\n  var m = s;\n  while (t.cmp(one) !== 0) {\n    var tmp = t;\n    for (var i = 0; tmp.cmp(one) !== 0; i++)\n      tmp = tmp.redSqr();\n    assert(i < m);\n    var b = this.pow(c, new BN(1).ishln(m - i - 1));\n\n    r = r.redMul(b);\n    c = b.redSqr();\n    t = t.redMul(c);\n    m = i;\n  }\n\n  return r;\n};\n\nRed.prototype.invm = function invm(a) {\n  var inv = a._invmp(this.m);\n  if (inv.sign) {\n    inv.sign = false;\n    return this.imod(inv).redNeg();\n  } else {\n    return this.imod(inv);\n  }\n};\n\nRed.prototype.pow = function pow(a, num) {\n  var w = [];\n\n  if (num.cmpn(0) === 0)\n    return new BN(1);\n\n  var q = num.clone();\n\n  while (q.cmpn(0) !== 0) {\n    w.push(q.andln(1));\n    q.ishrn(1);\n  }\n\n  // Skip leading zeroes\n  var res = a;\n  for (var i = 0; i < w.length; i++, res = this.sqr(res))\n    if (w[i] !== 0)\n      break;\n\n  if (++i < w.length) {\n    for (var q = this.sqr(res); i < w.length; i++, q = this.sqr(q)) {\n      if (w[i] === 0)\n        continue;\n      res = this.mul(res, q);\n    }\n  }\n\n  return res;\n};\n\nRed.prototype.convertTo = function convertTo(num) {\n  return num.clone();\n};\n\nRed.prototype.convertFrom = function convertFrom(num) {\n  var res = num.clone();\n  res.red = null;\n  return res;\n};\n\n//\n// Montgomery method engine\n//\n\nBN.mont = function mont(num) {\n  return new Mont(num);\n};\n\nfunction Mont(m) {\n  Red.call(this, m);\n\n  this.shift = this.m.bitLength();\n  if (this.shift % 26 !== 0)\n    this.shift += 26 - (this.shift % 26);\n  this.r = new BN(1).ishln(this.shift);\n  this.r2 = this.imod(this.r.sqr());\n  this.rinv = this.r._invmp(this.m);\n\n  this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n  this.minv.sign = true;\n  this.minv = this.minv.mod(this.r);\n}\ninherits(Mont, Red);\n\nMont.prototype.convertTo = function convertTo(num) {\n  return this.imod(num.shln(this.shift));\n};\n\nMont.prototype.convertFrom = function convertFrom(num) {\n  var r = this.imod(num.mul(this.rinv));\n  r.red = null;\n  return r;\n};\n\nMont.prototype.imul = function imul(a, b) {\n  if (a.cmpn(0) === 0 || b.cmpn(0) === 0) {\n    a.words[0] = 0;\n    a.length = 1;\n    return a;\n  }\n\n  var t = a.imul(b);\n  var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n  var u = t.isub(c).ishrn(this.shift);\n  var res = u;\n  if (u.cmp(this.m) >= 0)\n    res = u.isub(this.m);\n  else if (u.cmpn(0) < 0)\n    res = u.iadd(this.m);\n\n  return res._forceRed(this);\n};\n\nMont.prototype.mul = function mul(a, b) {\n  if (a.cmpn(0) === 0 || b.cmpn(0) === 0)\n    return new BN(0)._forceRed(this);\n\n  var t = a.mul(b);\n  var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n  var u = t.isub(c).ishrn(this.shift);\n  var res = u;\n  if (u.cmp(this.m) >= 0)\n    res = u.isub(this.m);\n  else if (u.cmpn(0) < 0)\n    res = u.iadd(this.m);\n\n  return res._forceRed(this);\n};\n\nMont.prototype.invm = function invm(a) {\n  // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n  var res = this.imod(a._invmp(this.m).mul(this.r2));\n  return res._forceRed(this);\n};\n\n})(typeof module === 'undefined' || module, this);\n"]},"metadata":{},"sourceType":"script"}