{"ast":null,"code":"import _defineProperty from\"/home/user/Desktop/react-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/user/Desktop/react-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{styled,createTheme,ThemeProvider}from'@mui/material/styles';import{useEffect,useState}from'react';import IconButton from'@mui/material/IconButton';import ChevronLeftIcon from'@mui/icons-material/ChevronLeft';import{mainListItems,secondaryListItems}from'../../components/listItems';import Toolbar from'@mui/material/Toolbar';import MuiDrawer from'@mui/material/Drawer';import List from'@mui/material/List';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var drawerWidth=240;var Drawer=styled(MuiDrawer,{shouldForwardProp:function shouldForwardProp(prop){return prop!=='open';}})(function(_ref){var theme=_ref.theme,open=_ref.open;return{'& .MuiDrawer-paper':_objectSpread({position:'relative',whiteSpace:'nowrap',width:drawerWidth,transition:theme.transitions.create('width',{easing:theme.transitions.easing.sharp,duration:theme.transitions.duration.enteringScreen}),boxSizing:'border-box'},!open&&_defineProperty({overflowX:'hidden',transition:theme.transitions.create('width',{easing:theme.transitions.easing.sharp,duration:theme.transitions.duration.leavingScreen}),width:theme.spacing(7)},theme.breakpoints.up('sm'),{width:theme.spacing(9)}))};});var MainDrawer=function MainDrawer(_ref3){var open=_ref3.open,setOpen=_ref3.setOpen;var toggleDrawer=function toggleDrawer(){setOpen(!open);};return/*#__PURE__*/_jsxs(Drawer,{variant:\"permanent\",open:open,children:[/*#__PURE__*/_jsx(Toolbar,{sx:{display:'flex',alignItems:'center',justifyContent:'flex-end',px:[1]},children:/*#__PURE__*/_jsx(IconButton,{onClick:toggleDrawer,children:/*#__PURE__*/_jsx(ChevronLeftIcon,{})})}),/*#__PURE__*/_jsx(List,{children:mainListItems})]});};export default MainDrawer;","map":{"version":3,"sources":["/home/user/Desktop/react-wallet/src/sections/main-drawer/index.js"],"names":["styled","createTheme","ThemeProvider","useEffect","useState","IconButton","ChevronLeftIcon","mainListItems","secondaryListItems","Toolbar","MuiDrawer","List","drawerWidth","Drawer","shouldForwardProp","prop","theme","open","position","whiteSpace","width","transition","transitions","create","easing","sharp","duration","enteringScreen","boxSizing","overflowX","leavingScreen","spacing","breakpoints","up","MainDrawer","setOpen","toggleDrawer","display","alignItems","justifyContent","px"],"mappings":"6SAAA,OAASA,MAAT,CAAiBC,WAAjB,CAA8BC,aAA9B,KAAmD,sBAAnD,CACA,OAASC,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,MAAOC,CAAAA,UAAP,KAAuB,0BAAvB,CACA,MAAOC,CAAAA,eAAP,KAA4B,iCAA5B,CACA,OAASC,aAAT,CAAwBC,kBAAxB,KAAkD,4BAAlD,CACA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,sBAAtB,CACA,MAAOC,CAAAA,IAAP,KAAiB,oBAAjB,C,wFAEA,GAAMC,CAAAA,WAAW,CAAG,GAApB,CAGA,GAAMC,CAAAA,MAAM,CAAGb,MAAM,CAACU,SAAD,CAAY,CAAEI,iBAAiB,CAAE,2BAACC,IAAD,QAAUA,CAAAA,IAAI,GAAK,MAAnB,EAArB,CAAZ,CAAN,CACT,kBAAGC,CAAAA,KAAH,MAAGA,KAAH,CAAUC,IAAV,MAAUA,IAAV,OAAsB,CACpB,oCACEC,QAAQ,CAAE,UADZ,CAEEC,UAAU,CAAE,QAFd,CAGEC,KAAK,CAAER,WAHT,CAIES,UAAU,CAAEL,KAAK,CAACM,WAAN,CAAkBC,MAAlB,CAAyB,OAAzB,CAAkC,CAC5CC,MAAM,CAAER,KAAK,CAACM,WAAN,CAAkBE,MAAlB,CAAyBC,KADW,CAE5CC,QAAQ,CAAEV,KAAK,CAACM,WAAN,CAAkBI,QAAlB,CAA2BC,cAFO,CAAlC,CAJd,CAQEC,SAAS,CAAE,YARb,EASM,CAACX,IAAD,mBACFY,SAAS,CAAE,QADT,CAEFR,UAAU,CAAEL,KAAK,CAACM,WAAN,CAAkBC,MAAlB,CAAyB,OAAzB,CAAkC,CAC5CC,MAAM,CAAER,KAAK,CAACM,WAAN,CAAkBE,MAAlB,CAAyBC,KADW,CAE5CC,QAAQ,CAAEV,KAAK,CAACM,WAAN,CAAkBI,QAAlB,CAA2BI,aAFO,CAAlC,CAFV,CAMFV,KAAK,CAAEJ,KAAK,CAACe,OAAN,CAAc,CAAd,CANL,EAODf,KAAK,CAACgB,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAPC,CAO4B,CAC5Bb,KAAK,CAAEJ,KAAK,CAACe,OAAN,CAAc,CAAd,CADqB,CAP5B,CATN,CADoB,CAAtB,EADS,CAAf,CA0BA,GAAMG,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,OAAqB,IAAnBjB,CAAAA,IAAmB,OAAnBA,IAAmB,CAAbkB,OAAa,OAAbA,OAAa,CAIpC,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACvBD,OAAO,CAAC,CAAClB,IAAF,CAAP,CACD,CAFH,CAMA,mBAEI,MAAC,MAAD,EAAQ,OAAO,CAAC,WAAhB,CAA4B,IAAI,CAAEA,IAAlC,wBACI,KAAC,OAAD,EACI,EAAE,CAAE,CACAoB,OAAO,CAAE,MADT,CAEAC,UAAU,CAAE,QAFZ,CAGAC,cAAc,CAAE,UAHhB,CAIAC,EAAE,CAAE,CAAC,CAAD,CAJJ,CADR,uBAQI,KAAC,UAAD,EAAY,OAAO,CAAEJ,YAArB,uBACI,KAAC,eAAD,IADJ,EARJ,EADJ,cAaI,KAAC,IAAD,WAAO7B,aAAP,EAbJ,GAFJ,CAsBH,CAhCD,CAkCA,cAAe2B,CAAAA,UAAf","sourcesContent":["import { styled, createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useEffect, useState } from 'react';\nimport IconButton from '@mui/material/IconButton';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport { mainListItems, secondaryListItems } from '../../components/listItems';\nimport Toolbar from '@mui/material/Toolbar';\nimport MuiDrawer from '@mui/material/Drawer';\nimport List from '@mui/material/List';\n\nconst drawerWidth = 240;\n\n\nconst Drawer = styled(MuiDrawer, { shouldForwardProp: (prop) => prop !== 'open' })(\n      ({ theme, open }) => ({\n        '& .MuiDrawer-paper': {\n          position: 'relative',\n          whiteSpace: 'nowrap',\n          width: drawerWidth,\n          transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n          }),\n          boxSizing: 'border-box',\n          ...(!open && {\n            overflowX: 'hidden',\n            transition: theme.transitions.create('width', {\n              easing: theme.transitions.easing.sharp,\n              duration: theme.transitions.duration.leavingScreen,\n            }),\n            width: theme.spacing(7),\n            [theme.breakpoints.up('sm')]: {\n              width: theme.spacing(9),\n            },\n          }),\n        },\n      }),\n    );\n\nconst MainDrawer = ({open, setOpen}) => {\n\n\n\n    const toggleDrawer = () => {\n        setOpen(!open);\n      };\n\n\n\n    return (\n\n        <Drawer variant=\"permanent\" open={open}>\n            <Toolbar\n                sx={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'flex-end',\n                    px: [1],\n                }}\n            >\n                <IconButton onClick={toggleDrawer}>\n                    <ChevronLeftIcon />\n                </IconButton>\n            </Toolbar>\n            <List>{mainListItems}</List>\n        </Drawer>\n\n\n    )\n\n\n}\n\nexport default MainDrawer"]},"metadata":{},"sourceType":"module"}