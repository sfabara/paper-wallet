{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/react-wallet/src/components/new_wallet_form/index.js\",\n    _s = $RefreshSig$();\n\nimport TextField from '@mui/material/TextField';\nimport styled from 'styled-components';\nimport { Button, Checkbox, IconButton, InputLabel, Typography } from '@mui/material';\nimport NiceInputPassword from 'react-nice-input-password';\nimport { useEffect, useState } from 'react';\nimport { FiLock } from 'react-icons/fi';\nimport 'react-nice-input-password/dist/react-nice-input-password.css';\nimport { FaCheckCircle } from 'react-icons/fa';\nimport { IoIosWarning } from 'react-icons/io';\nimport { MdContentCopy } from 'react-icons/md'; // var Mnemonic = require('bitcore-mnemonic')\n// Mnemonic import \n\nimport Mnemonic from 'bitcore-mnemonic-litecoin'; // import bip39 from 'bip39'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst bip39 = require('bip39'); // const constants = require('bip44') \n//Styled components\n\n\nconst Form = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    align-items: center;\n    height: 100%\n`;\n_c = Form;\nconst MnemonicContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n`;\n_c2 = MnemonicContainer;\nconst MnemonicText = styled.p`\n    background-color: rgb(40, 57, 71);\n    color: white;\n    box-shadow: 1px 1px 10px 1px #00000040;\n    border-radius: 4px;\n    padding: 12px;\n    font-weight: 700;\n    margin: 10px\n`;\n_c3 = MnemonicText;\nconst InputFields = styled.div`\n    display: flex;\n    flex-direction: column; \n    align-items: center;\n    justify-content: space-evenly;\n    height: 55%;\n\n`;\n_c4 = InputFields;\nconst Message = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    flex-grow: grow ;\n    margin: 20px\n`;\n_c5 = Message;\nconst Terms = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 8px;\n\n\n`; // mui styled\n\n_c6 = Terms;\nconst SubmitButton = styled(Button)(({\n  theme\n}) => ({\n  backgroundColor: \"rgb(40, 57, 71)\",\n  color: \"white\",\n  padding: 10,\n  borderRadius: \"10px\",\n  height: \"50px\",\n  margin: \"10px\",\n  fontWeight: 800,\n  width: \"50%\",\n  '&:hover': {\n    backgroundColor: 'rgb(40, 57, 71, .6)',\n    boxShadow: \"1px 1px 20px #00000090\",\n    border: \"solid\",\n    borderWidth: \"4px\",\n    borderColor: \"rgb(40, 57, 71)\"\n  },\n  '@media (max-width: 800px)': {\n    width: '90%'\n  }\n})); // Start New Wallet Form\n\nconst NewWalletForm = ({\n  modalVisible,\n  loginSuccess,\n  setLoginSuccess\n}) => {\n  _s();\n\n  const [errorMessage, setErrorMessage] = useState('');\n  const [terms, setTerms] = useState(false);\n  const [pass, setPass] = useState({\n    \"password\": null\n  });\n  const [color, setColor] = useState('#000');\n  const [match, setMatch] = useState(false);\n  const [confirmPass, setConfirmPass] = useState({\n    \"confirm\": null\n  });\n  const [hints, setHints] = useState(0);\n  const [everythingOk, setEverythingOk] = useState(false);\n  const [icon, setIcon] = useState();\n  const [mnemonic, setMnemonic] = useState();\n\n  const handlePass = e => {\n    setPass({\n      \"password\": e.value\n    });\n  };\n\n  const handleConfirmPass = async e => {\n    setConfirmPass({\n      \"confirm\": e.value\n    });\n  };\n\n  const handleSubmit = e => {\n    if (terms && match && hints == 4) {\n      setIcon( /*#__PURE__*/_jsxDEV(FaCheckCircle, {\n        color: \"#43ad1f\",\n        size: 30\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this));\n      setEverythingOk(true);\n      setErrorMessage(\"Success!\"); // Pass state to main layout with WALLET_SUCCESS\n\n      setTimeout(() => {\n        setLoginSuccess(true);\n      }, 1000);\n    } else {\n      setIcon( /*#__PURE__*/_jsxDEV(IoIosWarning, {\n        color: '#de1b4f',\n        size: 30\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }, this));\n      setEverythingOk(false);\n      setErrorMessage(\"1 Or More Requirements Missing\");\n    }\n  };\n\n  useEffect(() => {\n    if (pass.password === null || confirmPass.confirm === null || confirmPass.confirm === \"\" || pass.password === \"\") {\n      setColor(\"#000\");\n      return;\n    }\n\n    if (pass.password === confirmPass.confirm) {\n      setColor(\"#43ad1f\");\n      setMatch(true);\n\n      if (hints == 4 && match) {\n        console.log(\"Everyhting is perfecto\");\n      }\n    } else {\n      setMatch(false);\n      setColor('#de1b4f');\n    }\n  }, [confirmPass]);\n  useEffect(() => {\n    if (pass.password === null || confirmPass.confirm === null || confirmPass.confirm === \"\" || pass.password === \"\") {\n      setColor(\"#000\");\n      return;\n    }\n\n    if (pass.password === confirmPass.confirm) {\n      setMatch(true);\n      setColor('#43ad1f');\n    } else {\n      setMatch(false);\n      setColor('#de1b4f');\n    }\n  }, [pass]);\n  useEffect(() => {\n    if (!modalVisible) {\n      setIcon();\n      setColor('#000');\n      setMatch(false);\n      setPass({\n        \"password\": \"\"\n      });\n      setConfirmPass({\n        \"confirm\": \"\"\n      });\n      setTerms(false);\n      setErrorMessage();\n      setHints(0);\n      setEverythingOk(false);\n      return;\n    }\n\n    setMnemonic(genMnemonic());\n  }, [modalVisible]); // ======================================================================================\n  // ======================================================================================\n  // ========================= CONSTANTS FOR SECURITY BAR =================================\n\n  const levelBarCss = level => ({\n    height: \"10px\",\n    width: level > 0 ? `${100 / 4 * level}%` : \"100%\",\n    marginTop: 15,\n    marginBottom: 15,\n    transition: \"width 0.5s ease\",\n    backgroundColor: [\"#EFEFEF\", \"#de1b4f\", \"#fa9623\", \"#fce408\", \"#43ad1f\"][level],\n    borderRadius: 100\n  });\n\n  const CustomLevelBar = levels => {\n    setHints(levels);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: levelBarCss(hints)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 16\n    }, this);\n  };\n\n  const securityLevels = [{\n    descriptionLabel: /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"1 Number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 31\n    }, this),\n    validator: /.*[0-9].*/\n  }, {\n    descriptionLabel: /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"1 Lowercase Letter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 31\n    }, this),\n    validator: /.*[a-z].*/\n  }, {\n    descriptionLabel: /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"1 Uppercase Letter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 31\n    }, this),\n    validator: /.*[A-Z].*/\n  }, {\n    descriptionLabel: /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"8 Or More Characters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 31\n    }, this),\n    validator: /^.{8,}$/\n  }]; // ======================================================================================\n  // ======================================================================================\n  // ======================================================================================\n  // let generateMnemonic = async () => {\n  //     try {\n  //         return await bip39.generateMnemonic(256) // default to 128\n  //     } catch (e) {\n  //         return false\n  //     }\n  // }\n\n  const genMnemonic = () => {\n    // var code = new Mnemonic(Mnemonic.Words.ENGLISH);\n    // var xpriv = code.toHDPrivateKey();\n    // return code.toString()\n    const mnem = bip39.generateMnemonic();\n    console.log(\"mnem: \", mnem);\n    return mnem;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: [/*#__PURE__*/_jsxDEV(MnemonicContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Mnemonic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Note:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 23\n        }, this), \" Write down this phrase! If lost you cannot recover your wallet.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MnemonicText, {\n        children: [mnemonic, /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"large\",\n          color: \"info\",\n          onClick: () => {\n            navigator.clipboard.writeText(mnemonic);\n          },\n          children: /*#__PURE__*/_jsxDEV(MdContentCopy, {\n            size: 25,\n            color: 'white'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputFields, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Setup Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NiceInputPassword, {\n        name: \"password\",\n        placeholder: \"Password\",\n        value: pass.password,\n        showSecurityLevelDescription: true,\n        showSecurityLevelBar: true,\n        LabelComponent: InputLabel,\n        InputComponent: TextField,\n        onChange: handlePass,\n        renderLevelBarComponent: CustomLevelBar,\n        securityLevels: securityLevels,\n        InputComponentProps: {\n          variant: 'standard',\n          InputProps: {\n            endAdornment: /*#__PURE__*/_jsxDEV(FiLock, {\n              size: 30,\n              color: color\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 43\n            }, this)\n          }\n        },\n        securityLevels: securityLevels\n      }, mnemonic, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NiceInputPassword, {\n        name: \"password\",\n        placeholder: \"Re-Type Password\",\n        value: confirmPass.confirm,\n        LabelComponent: InputLabel,\n        InputComponent: TextField,\n        onChange: handleConfirmPass,\n        InputComponentProps: {\n          variant: 'standard',\n          InputProps: {\n            endAdornment: /*#__PURE__*/_jsxDEV(FiLock, {\n              size: 30,\n              color: color\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 43\n            }, this)\n          }\n        },\n        securityLevels: securityLevels\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Terms, {\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: terms,\n          onChange: () => setTerms(!terms)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"I Agree To \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            children: \"Terms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 101\n          }, this), \" and Conditions\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 84\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Message, {\n      children: [icon, \"  \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: everythingOk ? \"#43ad1f\" : \"#de1b4f\"\n        },\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewWalletForm, \"NTkqzn5KXoUxHmwzqBf3jal0d/s=\");\n\n_c7 = NewWalletForm;\nexport default NewWalletForm;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Form\");\n$RefreshReg$(_c2, \"MnemonicContainer\");\n$RefreshReg$(_c3, \"MnemonicText\");\n$RefreshReg$(_c4, \"InputFields\");\n$RefreshReg$(_c5, \"Message\");\n$RefreshReg$(_c6, \"Terms\");\n$RefreshReg$(_c7, \"NewWalletForm\");","map":{"version":3,"sources":["/home/user/Desktop/react-wallet/src/components/new_wallet_form/index.js"],"names":["TextField","styled","Button","Checkbox","IconButton","InputLabel","Typography","NiceInputPassword","useEffect","useState","FiLock","FaCheckCircle","IoIosWarning","MdContentCopy","Mnemonic","bip39","require","Form","div","MnemonicContainer","MnemonicText","p","InputFields","Message","Terms","SubmitButton","theme","backgroundColor","color","padding","borderRadius","height","margin","fontWeight","width","boxShadow","border","borderWidth","borderColor","NewWalletForm","modalVisible","loginSuccess","setLoginSuccess","errorMessage","setErrorMessage","terms","setTerms","pass","setPass","setColor","match","setMatch","confirmPass","setConfirmPass","hints","setHints","everythingOk","setEverythingOk","icon","setIcon","mnemonic","setMnemonic","handlePass","e","value","handleConfirmPass","handleSubmit","setTimeout","password","confirm","console","log","genMnemonic","levelBarCss","level","marginTop","marginBottom","transition","CustomLevelBar","levels","securityLevels","descriptionLabel","validator","mnem","generateMnemonic","navigator","clipboard","writeText","variant","InputProps","endAdornment"],"mappings":"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","sourcesContent":["import TextField from '@mui/material/TextField'\nimport styled from 'styled-components'\nimport { Button, Checkbox, IconButton, InputLabel, Typography } from '@mui/material';\nimport NiceInputPassword from 'react-nice-input-password';\nimport { useEffect, useState } from 'react';\nimport { FiLock } from 'react-icons/fi'\nimport 'react-nice-input-password/dist/react-nice-input-password.css';\nimport { FaCheckCircle } from 'react-icons/fa'\nimport { IoIosWarning } from 'react-icons/io'\nimport { MdContentCopy } from 'react-icons/md'\n// var Mnemonic = require('bitcore-mnemonic')\n\n\n\n// Mnemonic import \nimport Mnemonic from 'bitcore-mnemonic-litecoin'\n// import bip39 from 'bip39'\nconst bip39 = require('bip39')\n// const constants = require('bip44') \n\n\n//Styled components\nconst Form = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    align-items: center;\n    height: 100%\n`\nconst MnemonicContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n`\nconst MnemonicText = styled.p`\n    background-color: rgb(40, 57, 71);\n    color: white;\n    box-shadow: 1px 1px 10px 1px #00000040;\n    border-radius: 4px;\n    padding: 12px;\n    font-weight: 700;\n    margin: 10px\n`\n\n\nconst InputFields = styled.div`\n    display: flex;\n    flex-direction: column; \n    align-items: center;\n    justify-content: space-evenly;\n    height: 55%;\n\n`\n\nconst Message = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    flex-grow: grow ;\n    margin: 20px\n`\nconst Terms = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 8px;\n\n\n`\n\n\n\n// mui styled\nconst SubmitButton = styled(Button)(({ theme }) => ({\n    backgroundColor: \"rgb(40, 57, 71)\",\n    color: \"white\",\n    padding: 10,\n    borderRadius: \"10px\",\n    height: \"50px\",\n    margin: \"10px\",\n    fontWeight: 800,\n    width: \"50%\",\n    '&:hover':\n    {\n        backgroundColor: 'rgb(40, 57, 71, .6)',\n        boxShadow: \"1px 1px 20px #00000090\",\n        border: \"solid\",\n        borderWidth: \"4px\",\n        borderColor: \"rgb(40, 57, 71)\",\n    },\n    '@media (max-width: 800px)': {\n        width: '90%'\n    }\n}))\n\n\n\n// Start New Wallet Form\nconst NewWalletForm = ({ modalVisible, loginSuccess, setLoginSuccess }) => {\n    const [errorMessage, setErrorMessage] = useState('')\n    const [terms, setTerms] = useState(false)\n    const [pass, setPass] = useState({ \"password\": null })\n    const [color, setColor] = useState('#000')\n    const [match, setMatch] = useState(false)\n    const [confirmPass, setConfirmPass] = useState({ \"confirm\": null })\n    const [hints, setHints] = useState(0)\n    const [everythingOk, setEverythingOk] = useState(false)\n    const [icon, setIcon] = useState()\n    const [mnemonic, setMnemonic] = useState()\n\n    const handlePass = (e) => {\n        setPass({ \"password\": e.value })\n    }\n\n    const handleConfirmPass = async (e) => {\n        setConfirmPass({ \"confirm\": e.value })\n    }\n\n    const handleSubmit = (e) => {\n        if (terms && match && hints == 4) {\n            setIcon(<FaCheckCircle color={\"#43ad1f\"} size={30} />)\n            setEverythingOk(true)\n            setErrorMessage(\"Success!\")\n\n            // Pass state to main layout with WALLET_SUCCESS\n            setTimeout(() => {\n                setLoginSuccess(true)\n            }, 1000)\n\n\n        }\n        else {\n            setIcon(<IoIosWarning color={'#de1b4f'} size={30} />)\n            setEverythingOk(false)\n            setErrorMessage(\"1 Or More Requirements Missing\")\n        }\n    }\n\n    useEffect(() => {\n        if (pass.password === null || confirmPass.confirm === null || confirmPass.confirm === \"\" || pass.password === \"\") {\n            setColor(\"#000\")\n            return\n        }\n\n        if (pass.password === confirmPass.confirm) {\n            setColor(\"#43ad1f\")\n            setMatch(true)\n            if (hints == 4 && match) {\n                console.log(\"Everyhting is perfecto\")\n            }\n        } else {\n            setMatch(false)\n            setColor('#de1b4f')\n        }\n\n    }, [confirmPass])\n\n    useEffect(() => {\n        if (pass.password === null || confirmPass.confirm === null || confirmPass.confirm === \"\" || pass.password === \"\") {\n            setColor(\"#000\")\n            return\n        }\n\n        if (pass.password === confirmPass.confirm) {\n            setMatch(true)\n            setColor('#43ad1f')\n        }\n        else {\n            setMatch(false)\n            setColor('#de1b4f')\n        }\n\n    }, [pass])\n\n    useEffect(() => {\n        if (!modalVisible) {\n            setIcon()\n            setColor('#000')\n            setMatch(false)\n            setPass({ \"password\": \"\" })\n            setConfirmPass({ \"confirm\": \"\" })\n            setTerms(false)\n            setErrorMessage()\n            setHints(0)\n            setEverythingOk(false)\n            return\n        }\n        setMnemonic(genMnemonic())\n\n\n\n    }, [modalVisible])\n\n    // ======================================================================================\n    // ======================================================================================\n    // ========================= CONSTANTS FOR SECURITY BAR =================================\n\n    const levelBarCss = (level) => ({\n        height: \"10px\",\n        width: level > 0 ? `${(100 / 4) * level}%` : \"100%\",\n        marginTop: 15,\n        marginBottom: 15,\n        transition: \"width 0.5s ease\",\n        backgroundColor: [\"#EFEFEF\", \"#de1b4f\", \"#fa9623\", \"#fce408\", \"#43ad1f\"][level],\n        borderRadius: 100\n    });\n\n    const CustomLevelBar = (levels) => {\n        setHints(levels)\n\n        return <div style={levelBarCss(hints)} />\n    };\n\n\n    const securityLevels = [\n        {\n            descriptionLabel: <Typography>1 Number</Typography>,\n            validator: /.*[0-9].*/\n        },\n        {\n            descriptionLabel: <Typography>1 Lowercase Letter</Typography>,\n            validator: /.*[a-z].*/\n        },\n        {\n            descriptionLabel: <Typography>1 Uppercase Letter</Typography>,\n            validator: /.*[A-Z].*/\n        },\n        {\n            descriptionLabel: <Typography>8 Or More Characters</Typography>,\n            validator: /^.{8,}$/\n        }\n    ];\n\n    // ======================================================================================\n    // ======================================================================================\n    // ======================================================================================\n\n\n    // let generateMnemonic = async () => {\n    //     try {\n    //         return await bip39.generateMnemonic(256) // default to 128\n    //     } catch (e) {\n    //         return false\n    //     }\n    // }\n\n    const genMnemonic = () => {\n        // var code = new Mnemonic(Mnemonic.Words.ENGLISH);\n        // var xpriv = code.toHDPrivateKey();\n\n        // return code.toString()\n        const mnem = bip39.generateMnemonic()\n        console.log(\"mnem: \", mnem)\n        return mnem\n\n    }\n\n    return (\n        <Form>\n            <MnemonicContainer>\n                <h1>Mnemonic</h1>\n                <span><strong>Note:</strong> Write down this phrase! If lost you cannot recover your wallet.</span>\n                <MnemonicText>{mnemonic}\n                    <IconButton size={\"large\"} color={\"info\"} onClick={() => { navigator.clipboard.writeText(mnemonic) }}>\n                        <MdContentCopy size={25} color={'white'} />\n\n                    </IconButton>\n                </MnemonicText>\n\n\n            </MnemonicContainer>\n\n            <br />\n\n\n            <InputFields>\n                <h1>Setup Password</h1>\n\n                <NiceInputPassword\n                    name=\"password\"\n                    placeholder=\"Password\"\n                    value={pass.password}\n                    showSecurityLevelDescription={true}\n                    showSecurityLevelBar={true}\n                    LabelComponent={InputLabel}\n                    InputComponent={TextField}\n                    onChange={handlePass}\n                    renderLevelBarComponent={CustomLevelBar}\n                    securityLevels={securityLevels}\n                    key={mnemonic}\n                    InputComponentProps={{\n                        variant: 'standard',\n                        InputProps: {\n                            endAdornment: <FiLock size={30} color={color} />,\n                        }\n                    }}\n                    securityLevels={securityLevels}\n\n\n                />\n                <NiceInputPassword\n                    name=\"password\"\n                    placeholder=\"Re-Type Password\"\n                    value={confirmPass.confirm}\n                    LabelComponent={InputLabel}\n                    InputComponent={TextField}\n                    onChange={handleConfirmPass}\n\n                    InputComponentProps={{\n                        variant: 'standard',\n                        InputProps: {\n                            endAdornment: <FiLock size={30} color={color} />,\n                        }\n                    }}\n                    securityLevels={securityLevels}\n\n                />\n                <Terms>\n                    <Checkbox checked={terms} onChange={() => setTerms(!terms)} /> <span>I Agree To <a href=\"#\">Terms</a> and Conditions</span>\n\n                </Terms>\n\n            </InputFields>\n\n            <Message>\n                {icon}  <span style={{ color: everythingOk ? \"#43ad1f\" : \"#de1b4f\" }} >{errorMessage}</span>\n\n            </Message>\n\n\n            <SubmitButton onClick={handleSubmit}>Submit</SubmitButton>\n\n        </Form>\n\n\n    )\n}\n\nexport default NewWalletForm"]},"metadata":{},"sourceType":"module"}