{"ast":null,"code":"'use strict';\n\nvar curve = require('../curve');\n\nvar elliptic = require('../../elliptic');\n\nvar bn = require('bn.js');\n\nvar inherits = require('inherits');\n\nvar Base = curve.base;\nvar assert = elliptic.utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n  this.a = new bn(conf.a, 16).toRed(this.red);\n  this.b = new bn(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0; // If the curve is endomorphic, precalculate beta and lambda\n\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\n\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1) return; // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n\n  var beta;\n  var lambda;\n\n  if (conf.beta) {\n    beta = new bn(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p); // Choose the smallest beta\n\n\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n\n  if (conf.lambda) {\n    lambda = new bn(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  } // Get basis vectors, used for balanced length-two representation\n\n\n  var basis;\n\n  if (conf.basis) {\n    basis = conf.basis.map(function (vec) {\n      return {\n        a: new bn(vec.a, 16),\n        b: new bn(vec.b, 16)\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : bn.mont(num);\n  var tinv = new bn(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n  var s = new bn(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [l1, l2];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.shrn(Math.floor(this.n.bitLength() / 2)); // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new bn(1);\n  var y1 = new bn(0);\n  var x2 = new bn(0);\n  var y2 = new bn(1); // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n\n  var a0;\n  var b0; // First vector\n\n  var a1;\n  var b1; // Second vector\n\n  var a2;\n  var b2;\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n\n    prevR = r;\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n\n  a2 = r.neg();\n  b2 = x;\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  } // Normalize signs\n\n\n  if (a1.sign) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n\n  if (a2.sign) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [{\n    a: a1,\n    b: b1\n  }, {\n    a: a2,\n    b: b2\n  }];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b); // Calculate answer\n\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return {\n    k1: k1,\n    k2: k2\n  };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(odd, x) {\n  x = new bn(x, 16);\n  if (!x.red) x = x.toRed(this.red);\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt(); // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd) y = y.redNeg();\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf) return true;\n  var x = point.x;\n  var y = point.y;\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd = function _endoWnafMulAdd(points, coeffs) {\n  var npoints = this._endoWnafT1;\n  var ncoeffs = this._endoWnafT2;\n\n  for (var i = 0; i < points.length; i++) {\n    var split = this._endoSplit(coeffs[i]);\n\n    var p = points[i];\n\n    var beta = p._getBeta();\n\n    if (split.k1.sign) {\n      split.k1.sign = !split.k1.sign;\n      p = p.neg(true);\n    }\n\n    if (split.k2.sign) {\n      split.k2.sign = !split.k2.sign;\n      beta = beta.neg(true);\n    }\n\n    npoints[i * 2] = p;\n    npoints[i * 2 + 1] = beta;\n    ncoeffs[i * 2] = split.k1;\n    ncoeffs[i * 2 + 1] = split.k2;\n  }\n\n  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2); // Clean-up references to points and coefficients\n\n\n  for (var j = 0; j < i * 2; j++) {\n    npoints[j] = null;\n    ncoeffs[j] = null;\n  }\n\n  return res;\n};\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new bn(x, 16);\n    this.y = new bn(y, 16); // Force redgomery representation when loading from JSON\n\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n\n    if (!this.x.red) this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red) this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\n\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo) return;\n  var pre = this.precomputed;\n  if (pre && pre.beta) return pre.beta;\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n\n  if (pre) {\n    var curve = this.curve;\n\n    var endoMul = function (p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul)\n      }\n    };\n  }\n\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed) return [this.x, this.y];\n  return [this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1)\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1)\n    }\n  }];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string') obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2]) return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [res].concat(pre.doubles.points.map(obj2point))\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [res].concat(pre.naf.points.map(obj2point))\n    }\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity()) return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) + ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf) return p; // P + O = P\n\n  if (p.inf) return this; // P + P = 2P\n\n  if (this.eq(p)) return this.dbl(); // P + (-P) = O\n\n  if (this.neg().eq(p)) return this.curve.point(null, null); // P + Q = O\n\n  if (this.x.cmp(p.x) === 0) return this.curve.point(null, null);\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0) c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf) return this; // 2P = O\n\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0) return this.curve.point(null, null);\n  var a = this.curve.a;\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new bn(k, 16);\n  if (this.precomputed && this.precomputed.doubles) return this.curve._fixedNafMul(this, k);else if (this.curve.endo) return this.curve._endoWnafMulAdd([this], [k]);else return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [this, p2];\n  var coeffs = [k1, k2];\n  if (this.curve.endo) return this.curve._endoWnafMulAdd(points, coeffs);else return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p || this.inf === p.inf && (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf) return this;\n  var res = this.curve.point(this.x, this.y.redNeg());\n\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n\n    var negate = function (p) {\n      return p.neg();\n    };\n\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate)\n      }\n    };\n  }\n\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf) return this.curve.jpoint(null, null, null);\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new bn(0);\n  } else {\n    this.x = new bn(x, 16);\n    this.y = new bn(y, 16);\n    this.z = new bn(z, 16);\n  }\n\n  if (!this.x.red) this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red) this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red) this.z = this.z.toRed(this.curve.red);\n  this.zOne = this.z === this.curve.one;\n}\n\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity()) return this.curve.point(null, null);\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity()) return p; // P + O = P\n\n  if (p.isInfinity()) return this; // 12M + 4S + 7A\n\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0) return this.curve.jpoint(null, null, null);else return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity()) return p.toJ(); // P + O = P\n\n  if (p.isInfinity()) return this; // 8M + 3S + 7A\n\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0) return this.curve.jpoint(null, null, null);else return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0) return this;\n  if (this.isInfinity()) return this;\n  if (!pow) return this.dbl();\n\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n\n    for (var i = 0; i < pow; i++) r = r.dbl();\n\n    return r;\n  } // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n\n\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr(); // Reuse results\n\n  var jyd = jy.redAdd(jy);\n\n  for (var i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow) jz4 = jz4.redMul(jyd4);\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity()) return this;\n  if (this.curve.zeroA) return this._zeroDbl();else if (this.curve.threeA) return this._threeDbl();else return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz; // Z = 1\n\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n    // XX = X1^2\n    var xx = this.x.redSqr(); // YY = Y1^2\n\n    var yy = this.y.redSqr(); // YYYY = YY^2\n\n    var yyyy = yy.redSqr(); // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s); // M = 3 * XX + a; a = 0\n\n    var m = xx.redAdd(xx).redIAdd(xx); // T = M ^ 2 - 2*S\n\n    var t = m.redSqr().redISub(s).redISub(s); // 8 * YYYY\n\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8); // X3 = T\n\n    nx = t; // Y3 = M * (S - T) - 8 * YYYY\n\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8); // Z3 = 2*Y1\n\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n    // A = X1^2\n    var a = this.x.redSqr(); // B = Y1^2\n\n    var b = this.y.redSqr(); // C = B^2\n\n    var c = b.redSqr(); // D = 2 * ((X1 + B)^2 - A - C)\n\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d); // E = 3 * A\n\n    var e = a.redAdd(a).redIAdd(a); // F = E^2\n\n    var f = e.redSqr(); // 8 * C\n\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8); // X3 = F - 2 * D\n\n    nx = f.redISub(d).redISub(d); // Y3 = E * (D - X3) - 8 * C\n\n    ny = e.redMul(d.redISub(nx)).redISub(c8); // Z3 = 2 * Y1 * Z1\n\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz; // Z = 1\n\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n    // XX = X1^2\n    var xx = this.x.redSqr(); // YY = Y1^2\n\n    var yy = this.y.redSqr(); // YYYY = YY^2\n\n    var yyyy = yy.redSqr(); // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s); // M = 3 * XX + a\n\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a); // T = M^2 - 2 * S\n\n    var t = m.redSqr().redISub(s).redISub(s); // X3 = T\n\n    nx = t; // Y3 = M * (S - T) - 8 * YYYY\n\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8); // Z3 = 2 * Y1\n\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n    // delta = Z1^2\n    var delta = this.z.redSqr(); // gamma = Y1^2\n\n    var gamma = this.y.redSqr(); // beta = X1 * gamma\n\n    var beta = this.x.redMul(gamma); // alpha = 3 * (X1 - delta) * (X1 + delta)\n\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha); // X3 = alpha^2 - 8 * beta\n\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8); // Z3 = (Y1 + Z1)^2 - gamma - delta\n\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta); // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a; // 4M + 6S + 10A\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA) return this.dbl().add(this); // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n  // XX = X1^2\n\n  var xx = this.x.redSqr(); // YY = Y1^2\n\n  var yy = this.y.redSqr(); // ZZ = Z1^2\n\n  var zz = this.z.redSqr(); // YYYY = YY^2\n\n  var yyyy = yy.redSqr(); // M = 3 * XX + a * ZZ2; a = 0\n\n  var m = xx.redAdd(xx).redIAdd(xx); // MM = M^2\n\n  var mm = m.redSqr(); // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm); // EE = E^2\n\n  var ee = e.redSqr(); // T = 16*YYYY\n\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t); // U = (M + E)^2 - MM - EE - T\n\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t); // X3 = 4 * (X1 * EE - 4 * YY * U)\n\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx); // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny); // Z3 = (Z1 + E)^2 - ZZ - EE\n\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new bn(k, kbase);\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine') return this.eq(p.toJ());\n  if (this === p) return true; // x1 * z2^2 == x2 * z1^2\n\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0) return false; // y1 * z2^3 == y2 * z1^3\n\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity()) return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) + ' y: ' + this.y.toString(16, 2) + ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};","map":{"version":3,"sources":["/home/user/Desktop/react-wallet/node_modules/bitcore-lib-litecoin/node_modules/elliptic/lib/elliptic/curve/short.js"],"names":["curve","require","elliptic","bn","inherits","Base","base","assert","utils","ShortCurve","conf","call","a","toRed","red","b","tinv","two","redInvm","zeroA","fromRed","cmpn","threeA","sub","p","endo","_getEndomorphism","_endoWnafT1","Array","_endoWnafT2","module","exports","prototype","g","n","modn","beta","lambda","betas","_getEndoRoots","cmp","lambdas","mul","x","redMul","basis","map","vec","_getEndoBasis","num","mont","ntinv","redNeg","s","redSqrt","l1","redAdd","l2","redSub","aprxSqrt","shrn","Math","floor","bitLength","u","v","clone","x1","y1","x2","y2","a0","b0","a1","b1","a2","b2","prevR","i","r","q","div","y","neg","len1","sqr","add","len2","sign","_endoSplit","k","v1","v2","c1","divRound","c2","p1","p2","q1","q2","k1","k2","pointFromX","odd","redSqr","redIAdd","isOdd","point","validate","inf","ax","rhs","redISub","_endoWnafMulAdd","points","coeffs","npoints","ncoeffs","length","split","_getBeta","res","_wnafMulAdd","j","Point","isRed","BasePoint","forceRed","pointFromJSON","obj","fromJSON","pre","precomputed","endoMul","naf","wnd","doubles","step","toJSON","slice","JSON","parse","obj2point","concat","inspect","isInfinity","toString","eq","dbl","c","nx","ny","ys1","dyinv","getX","getY","_fixedNafMul","_wnafMul","mulAdd","_precompute","negate","toJ","jpoint","one","JPoint","z","zOne","toP","zinv","zinv2","ay","pz2","z2","u1","u2","s1","s2","h","h2","h3","nz","mixedAdd","dblp","pow","jx","jy","jz","jz4","jyd","jx2","jyd2","jyd4","t1","t2","dny","_zeroDbl","_threeDbl","_dbl","xx","yy","yyyy","m","t","yyyy8","d","e","f","c8","delta","gamma","alpha","beta4","beta8","ggamma8","jy2","jxd4","jyd8","trpl","zz","mm","ee","yyu4","kbase","type","z3","pz3"],"mappings":"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","sourcesContent":["'use strict';\n\nvar curve = require('../curve');\nvar elliptic = require('../../elliptic');\nvar bn = require('bn.js');\nvar inherits = require('inherits');\nvar Base = curve.base;\n\nvar assert = elliptic.utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new bn(conf.a, 16).toRed(this.red);\n  this.b = new bn(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new bn(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new bn(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new bn(vec.a, 16),\n        b: new bn(vec.b, 16)\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : bn.mont(num);\n  var tinv = new bn(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new bn(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.shrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new bn(1);\n  var y1 = new bn(0);\n  var x2 = new bn(0);\n  var y2 = new bn(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.sign) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.sign) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 }\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(odd, x) {\n  x = new bn(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs) {\n  var npoints = this._endoWnafT1;\n  var ncoeffs = this._endoWnafT2;\n  for (var i = 0; i < points.length; i++) {\n    var split = this._endoSplit(coeffs[i]);\n    var p = points[i];\n    var beta = p._getBeta();\n\n    if (split.k1.sign) {\n      split.k1.sign = !split.k1.sign;\n      p = p.neg(true);\n    }\n    if (split.k2.sign) {\n      split.k2.sign = !split.k2.sign;\n      beta = beta.neg(true);\n    }\n\n    npoints[i * 2] = p;\n    npoints[i * 2 + 1] = beta;\n    ncoeffs[i * 2] = split.k1;\n    ncoeffs[i * 2 + 1] = split.k2;\n  }\n  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2);\n\n  // Clean-up references to points and coefficients\n  for (var j = 0; j < i * 2; j++) {\n    npoints[j] = null;\n    ncoeffs[j] = null;\n  }\n  return res;\n};\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new bn(x, 16);\n    this.y = new bn(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul)\n      }\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1)\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1)\n    }\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point))\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point))\n    }\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new bn(k, 16);\n\n  if (this.precomputed && this.precomputed.doubles)\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate)\n      }\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new bn(0);\n  } else {\n    this.x = new bn(x, 16);\n    this.y = new bn(y, 16);\n    this.z = new bn(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (var i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (var i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new bn(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n"]},"metadata":{},"sourceType":"script"}