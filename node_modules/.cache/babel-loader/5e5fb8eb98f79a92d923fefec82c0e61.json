{"ast":null,"code":"'use strict';\n\nvar _ = require('lodash');\n\nvar BN = require('../crypto/bn');\n\nvar buffer = require('buffer');\n\nvar bufferUtil = require('../util/buffer');\n\nvar JSUtil = require('../util/js');\n\nvar BufferWriter = require('../encoding/bufferwriter');\n\nvar Script = require('../script');\n\nvar $ = require('../util/preconditions');\n\nvar errors = require('../errors');\n\nvar MAX_SAFE_INTEGER = 0x1fffffffffffff;\n\nfunction Output(args) {\n  if (!(this instanceof Output)) {\n    return new Output(args);\n  }\n\n  if (_.isObject(args)) {\n    this.satoshis = args.satoshis;\n\n    if (bufferUtil.isBuffer(args.script)) {\n      this._scriptBuffer = args.script;\n    } else {\n      var script;\n\n      if (_.isString(args.script) && JSUtil.isHexa(args.script)) {\n        script = new buffer.Buffer(args.script, 'hex');\n      } else {\n        script = args.script;\n      }\n\n      this.setScript(script);\n    }\n  } else {\n    throw new TypeError('Unrecognized argument for Output');\n  }\n}\n\nObject.defineProperty(Output.prototype, 'script', {\n  configurable: false,\n  enumerable: true,\n  get: function get() {\n    if (this._script) {\n      return this._script;\n    } else {\n      this.setScriptFromBuffer(this._scriptBuffer);\n      return this._script;\n    }\n  }\n});\nObject.defineProperty(Output.prototype, 'satoshis', {\n  configurable: false,\n  enumerable: true,\n  get: function get() {\n    return this._satoshis;\n  },\n  set: function set(num) {\n    if (num instanceof BN) {\n      this._satoshisBN = num;\n      this._satoshis = num.toNumber();\n    } else if (_.isString(num)) {\n      this._satoshis = parseInt(num);\n      this._satoshisBN = BN.fromNumber(this._satoshis);\n    } else {\n      $.checkArgument(JSUtil.isNaturalNumber(num), 'Output satoshis is not a natural number');\n      this._satoshisBN = BN.fromNumber(num);\n      this._satoshis = num;\n    }\n\n    $.checkState(JSUtil.isNaturalNumber(this._satoshis), 'Output satoshis is not a natural number');\n  }\n});\n\nOutput.prototype.invalidSatoshis = function () {\n  if (this._satoshis > MAX_SAFE_INTEGER) {\n    return 'transaction txout satoshis greater than max safe integer';\n  }\n\n  if (this._satoshis !== this._satoshisBN.toNumber()) {\n    return 'transaction txout satoshis has corrupted value';\n  }\n\n  if (this._satoshis < 0) {\n    return 'transaction txout negative';\n  }\n\n  return false;\n};\n\nOutput.prototype.toObject = Output.prototype.toJSON = function toObject() {\n  var obj = {\n    satoshis: this.satoshis\n  };\n  obj.script = this._scriptBuffer.toString('hex');\n  return obj;\n};\n\nOutput.fromObject = function (data) {\n  return new Output(data);\n};\n\nOutput.prototype.setScriptFromBuffer = function (buffer) {\n  this._scriptBuffer = buffer;\n\n  try {\n    this._script = Script.fromBuffer(this._scriptBuffer);\n    this._script._isOutput = true;\n  } catch (e) {\n    if (e instanceof errors.Script.InvalidBuffer) {\n      this._script = null;\n    } else {\n      throw e;\n    }\n  }\n};\n\nOutput.prototype.setScript = function (script) {\n  if (script instanceof Script) {\n    this._scriptBuffer = script.toBuffer();\n    this._script = script;\n    this._script._isOutput = true;\n  } else if (_.isString(script)) {\n    this._script = Script.fromString(script);\n    this._scriptBuffer = this._script.toBuffer();\n    this._script._isOutput = true;\n  } else if (bufferUtil.isBuffer(script)) {\n    this.setScriptFromBuffer(script);\n  } else {\n    throw new TypeError('Invalid argument type: script');\n  }\n\n  return this;\n};\n\nOutput.prototype.inspect = function () {\n  var scriptStr;\n\n  if (this.script) {\n    scriptStr = this.script.inspect();\n  } else {\n    scriptStr = this._scriptBuffer.toString('hex');\n  }\n\n  return '<Output (' + this.satoshis + ' sats) ' + scriptStr + '>';\n};\n\nOutput.fromBufferReader = function (br) {\n  var obj = {};\n  obj.satoshis = br.readUInt64LEBN();\n  var size = br.readVarintNum();\n\n  if (size !== 0) {\n    obj.script = br.read(size);\n  } else {\n    obj.script = new buffer.Buffer([]);\n  }\n\n  return new Output(obj);\n};\n\nOutput.prototype.toBufferWriter = function (writer) {\n  if (!writer) {\n    writer = new BufferWriter();\n  }\n\n  writer.writeUInt64LEBN(this._satoshisBN);\n  var script = this._scriptBuffer;\n  writer.writeVarintNum(script.length);\n  writer.write(script);\n  return writer;\n};\n\nmodule.exports = Output;","map":{"version":3,"sources":["/home/user/Desktop/react-wallet/node_modules/bitcore-lib-litecoin/lib/transaction/output.js"],"names":["_","require","BN","buffer","bufferUtil","JSUtil","BufferWriter","Script","$","errors","MAX_SAFE_INTEGER","Output","args","isObject","satoshis","isBuffer","script","_scriptBuffer","isString","isHexa","Buffer","setScript","TypeError","Object","defineProperty","prototype","configurable","enumerable","get","_script","setScriptFromBuffer","_satoshis","set","num","_satoshisBN","toNumber","parseInt","fromNumber","checkArgument","isNaturalNumber","checkState","invalidSatoshis","toObject","toJSON","obj","toString","fromObject","data","fromBuffer","_isOutput","e","InvalidBuffer","toBuffer","fromString","inspect","scriptStr","fromBufferReader","br","readUInt64LEBN","size","readVarintNum","read","toBufferWriter","writer","writeUInt64LEBN","writeVarintNum","length","write","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAf;;AACA,IAAIC,EAAE,GAAGD,OAAO,CAAC,cAAD,CAAhB;;AACA,IAAIE,MAAM,GAAGF,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIG,UAAU,GAAGH,OAAO,CAAC,gBAAD,CAAxB;;AACA,IAAII,MAAM,GAAGJ,OAAO,CAAC,YAAD,CAApB;;AACA,IAAIK,YAAY,GAAGL,OAAO,CAAC,0BAAD,CAA1B;;AACA,IAAIM,MAAM,GAAGN,OAAO,CAAC,WAAD,CAApB;;AACA,IAAIO,CAAC,GAAGP,OAAO,CAAC,uBAAD,CAAf;;AACA,IAAIQ,MAAM,GAAGR,OAAO,CAAC,WAAD,CAApB;;AAEA,IAAIS,gBAAgB,GAAG,gBAAvB;;AAEA,SAASC,MAAT,CAAgBC,IAAhB,EAAsB;AACpB,MAAI,EAAE,gBAAgBD,MAAlB,CAAJ,EAA+B;AAC7B,WAAO,IAAIA,MAAJ,CAAWC,IAAX,CAAP;AACD;;AACD,MAAIZ,CAAC,CAACa,QAAF,CAAWD,IAAX,CAAJ,EAAsB;AACpB,SAAKE,QAAL,GAAgBF,IAAI,CAACE,QAArB;;AACA,QAAIV,UAAU,CAACW,QAAX,CAAoBH,IAAI,CAACI,MAAzB,CAAJ,EAAsC;AACpC,WAAKC,aAAL,GAAqBL,IAAI,CAACI,MAA1B;AACD,KAFD,MAEO;AACL,UAAIA,MAAJ;;AACA,UAAIhB,CAAC,CAACkB,QAAF,CAAWN,IAAI,CAACI,MAAhB,KAA2BX,MAAM,CAACc,MAAP,CAAcP,IAAI,CAACI,MAAnB,CAA/B,EAA2D;AACzDA,QAAAA,MAAM,GAAG,IAAIb,MAAM,CAACiB,MAAX,CAAkBR,IAAI,CAACI,MAAvB,EAA+B,KAA/B,CAAT;AACD,OAFD,MAEO;AACLA,QAAAA,MAAM,GAAGJ,IAAI,CAACI,MAAd;AACD;;AACD,WAAKK,SAAL,CAAeL,MAAf;AACD;AACF,GAbD,MAaO;AACL,UAAM,IAAIM,SAAJ,CAAc,kCAAd,CAAN;AACD;AACF;;AAEDC,MAAM,CAACC,cAAP,CAAsBb,MAAM,CAACc,SAA7B,EAAwC,QAAxC,EAAkD;AAChDC,EAAAA,YAAY,EAAE,KADkC;AAEhDC,EAAAA,UAAU,EAAE,IAFoC;AAGhDC,EAAAA,GAAG,EAAE,eAAW;AACd,QAAI,KAAKC,OAAT,EAAkB;AAChB,aAAO,KAAKA,OAAZ;AACD,KAFD,MAEO;AACL,WAAKC,mBAAL,CAAyB,KAAKb,aAA9B;AACA,aAAO,KAAKY,OAAZ;AACD;AAEF;AAX+C,CAAlD;AAcAN,MAAM,CAACC,cAAP,CAAsBb,MAAM,CAACc,SAA7B,EAAwC,UAAxC,EAAoD;AAClDC,EAAAA,YAAY,EAAE,KADoC;AAElDC,EAAAA,UAAU,EAAE,IAFsC;AAGlDC,EAAAA,GAAG,EAAE,eAAW;AACd,WAAO,KAAKG,SAAZ;AACD,GALiD;AAMlDC,EAAAA,GAAG,EAAE,aAASC,GAAT,EAAc;AACjB,QAAIA,GAAG,YAAY/B,EAAnB,EAAuB;AACrB,WAAKgC,WAAL,GAAmBD,GAAnB;AACA,WAAKF,SAAL,GAAiBE,GAAG,CAACE,QAAJ,EAAjB;AACD,KAHD,MAGO,IAAInC,CAAC,CAACkB,QAAF,CAAWe,GAAX,CAAJ,EAAqB;AAC1B,WAAKF,SAAL,GAAiBK,QAAQ,CAACH,GAAD,CAAzB;AACA,WAAKC,WAAL,GAAmBhC,EAAE,CAACmC,UAAH,CAAc,KAAKN,SAAnB,CAAnB;AACD,KAHM,MAGA;AACLvB,MAAAA,CAAC,CAAC8B,aAAF,CACEjC,MAAM,CAACkC,eAAP,CAAuBN,GAAvB,CADF,EAEE,yCAFF;AAIA,WAAKC,WAAL,GAAmBhC,EAAE,CAACmC,UAAH,CAAcJ,GAAd,CAAnB;AACA,WAAKF,SAAL,GAAiBE,GAAjB;AACD;;AACDzB,IAAAA,CAAC,CAACgC,UAAF,CACEnC,MAAM,CAACkC,eAAP,CAAuB,KAAKR,SAA5B,CADF,EAEE,yCAFF;AAID;AAzBiD,CAApD;;AA4BApB,MAAM,CAACc,SAAP,CAAiBgB,eAAjB,GAAmC,YAAW;AAC5C,MAAI,KAAKV,SAAL,GAAiBrB,gBAArB,EAAuC;AACrC,WAAO,0DAAP;AACD;;AACD,MAAI,KAAKqB,SAAL,KAAmB,KAAKG,WAAL,CAAiBC,QAAjB,EAAvB,EAAoD;AAClD,WAAO,gDAAP;AACD;;AACD,MAAI,KAAKJ,SAAL,GAAiB,CAArB,EAAwB;AACtB,WAAO,4BAAP;AACD;;AACD,SAAO,KAAP;AACD,CAXD;;AAaApB,MAAM,CAACc,SAAP,CAAiBiB,QAAjB,GAA4B/B,MAAM,CAACc,SAAP,CAAiBkB,MAAjB,GAA0B,SAASD,QAAT,GAAoB;AACxE,MAAIE,GAAG,GAAG;AACR9B,IAAAA,QAAQ,EAAE,KAAKA;AADP,GAAV;AAGA8B,EAAAA,GAAG,CAAC5B,MAAJ,GAAa,KAAKC,aAAL,CAAmB4B,QAAnB,CAA4B,KAA5B,CAAb;AACA,SAAOD,GAAP;AACD,CAND;;AAQAjC,MAAM,CAACmC,UAAP,GAAoB,UAASC,IAAT,EAAe;AACjC,SAAO,IAAIpC,MAAJ,CAAWoC,IAAX,CAAP;AACD,CAFD;;AAIApC,MAAM,CAACc,SAAP,CAAiBK,mBAAjB,GAAuC,UAAS3B,MAAT,EAAiB;AACtD,OAAKc,aAAL,GAAqBd,MAArB;;AACA,MAAI;AACF,SAAK0B,OAAL,GAAetB,MAAM,CAACyC,UAAP,CAAkB,KAAK/B,aAAvB,CAAf;AACA,SAAKY,OAAL,CAAaoB,SAAb,GAAyB,IAAzB;AACD,GAHD,CAGE,OAAMC,CAAN,EAAS;AACT,QAAIA,CAAC,YAAYzC,MAAM,CAACF,MAAP,CAAc4C,aAA/B,EAA8C;AAC5C,WAAKtB,OAAL,GAAe,IAAf;AACD,KAFD,MAEO;AACL,YAAMqB,CAAN;AACD;AACF;AACF,CAZD;;AAcAvC,MAAM,CAACc,SAAP,CAAiBJ,SAAjB,GAA6B,UAASL,MAAT,EAAiB;AAC5C,MAAIA,MAAM,YAAYT,MAAtB,EAA8B;AAC5B,SAAKU,aAAL,GAAqBD,MAAM,CAACoC,QAAP,EAArB;AACA,SAAKvB,OAAL,GAAeb,MAAf;AACA,SAAKa,OAAL,CAAaoB,SAAb,GAAyB,IAAzB;AACD,GAJD,MAIO,IAAIjD,CAAC,CAACkB,QAAF,CAAWF,MAAX,CAAJ,EAAwB;AAC7B,SAAKa,OAAL,GAAetB,MAAM,CAAC8C,UAAP,CAAkBrC,MAAlB,CAAf;AACA,SAAKC,aAAL,GAAqB,KAAKY,OAAL,CAAauB,QAAb,EAArB;AACA,SAAKvB,OAAL,CAAaoB,SAAb,GAAyB,IAAzB;AACD,GAJM,MAIA,IAAI7C,UAAU,CAACW,QAAX,CAAoBC,MAApB,CAAJ,EAAiC;AACtC,SAAKc,mBAAL,CAAyBd,MAAzB;AACD,GAFM,MAEA;AACL,UAAM,IAAIM,SAAJ,CAAc,+BAAd,CAAN;AACD;;AACD,SAAO,IAAP;AACD,CAfD;;AAiBAX,MAAM,CAACc,SAAP,CAAiB6B,OAAjB,GAA2B,YAAW;AACpC,MAAIC,SAAJ;;AACA,MAAI,KAAKvC,MAAT,EAAiB;AACfuC,IAAAA,SAAS,GAAG,KAAKvC,MAAL,CAAYsC,OAAZ,EAAZ;AACD,GAFD,MAEO;AACLC,IAAAA,SAAS,GAAG,KAAKtC,aAAL,CAAmB4B,QAAnB,CAA4B,KAA5B,CAAZ;AACD;;AACD,SAAO,cAAc,KAAK/B,QAAnB,GAA8B,SAA9B,GAA0CyC,SAA1C,GAAsD,GAA7D;AACD,CARD;;AAUA5C,MAAM,CAAC6C,gBAAP,GAA0B,UAASC,EAAT,EAAa;AACrC,MAAIb,GAAG,GAAG,EAAV;AACAA,EAAAA,GAAG,CAAC9B,QAAJ,GAAe2C,EAAE,CAACC,cAAH,EAAf;AACA,MAAIC,IAAI,GAAGF,EAAE,CAACG,aAAH,EAAX;;AACA,MAAID,IAAI,KAAK,CAAb,EAAgB;AACdf,IAAAA,GAAG,CAAC5B,MAAJ,GAAayC,EAAE,CAACI,IAAH,CAAQF,IAAR,CAAb;AACD,GAFD,MAEO;AACLf,IAAAA,GAAG,CAAC5B,MAAJ,GAAa,IAAIb,MAAM,CAACiB,MAAX,CAAkB,EAAlB,CAAb;AACD;;AACD,SAAO,IAAIT,MAAJ,CAAWiC,GAAX,CAAP;AACD,CAVD;;AAYAjC,MAAM,CAACc,SAAP,CAAiBqC,cAAjB,GAAkC,UAASC,MAAT,EAAiB;AACjD,MAAI,CAACA,MAAL,EAAa;AACXA,IAAAA,MAAM,GAAG,IAAIzD,YAAJ,EAAT;AACD;;AACDyD,EAAAA,MAAM,CAACC,eAAP,CAAuB,KAAK9B,WAA5B;AACA,MAAIlB,MAAM,GAAG,KAAKC,aAAlB;AACA8C,EAAAA,MAAM,CAACE,cAAP,CAAsBjD,MAAM,CAACkD,MAA7B;AACAH,EAAAA,MAAM,CAACI,KAAP,CAAanD,MAAb;AACA,SAAO+C,MAAP;AACD,CATD;;AAWAK,MAAM,CAACC,OAAP,GAAiB1D,MAAjB","sourcesContent":["'use strict';\n\nvar _ = require('lodash');\nvar BN = require('../crypto/bn');\nvar buffer = require('buffer');\nvar bufferUtil = require('../util/buffer');\nvar JSUtil = require('../util/js');\nvar BufferWriter = require('../encoding/bufferwriter');\nvar Script = require('../script');\nvar $ = require('../util/preconditions');\nvar errors = require('../errors');\n\nvar MAX_SAFE_INTEGER = 0x1fffffffffffff;\n\nfunction Output(args) {\n  if (!(this instanceof Output)) {\n    return new Output(args);\n  }\n  if (_.isObject(args)) {\n    this.satoshis = args.satoshis;\n    if (bufferUtil.isBuffer(args.script)) {\n      this._scriptBuffer = args.script;\n    } else {\n      var script;\n      if (_.isString(args.script) && JSUtil.isHexa(args.script)) {\n        script = new buffer.Buffer(args.script, 'hex');\n      } else {\n        script = args.script;\n      }\n      this.setScript(script);\n    }\n  } else {\n    throw new TypeError('Unrecognized argument for Output');\n  }\n}\n\nObject.defineProperty(Output.prototype, 'script', {\n  configurable: false,\n  enumerable: true,\n  get: function() {\n    if (this._script) {\n      return this._script;\n    } else {\n      this.setScriptFromBuffer(this._scriptBuffer);\n      return this._script;\n    }\n\n  }\n});\n\nObject.defineProperty(Output.prototype, 'satoshis', {\n  configurable: false,\n  enumerable: true,\n  get: function() {\n    return this._satoshis;\n  },\n  set: function(num) {\n    if (num instanceof BN) {\n      this._satoshisBN = num;\n      this._satoshis = num.toNumber();\n    } else if (_.isString(num)) {\n      this._satoshis = parseInt(num);\n      this._satoshisBN = BN.fromNumber(this._satoshis);\n    } else {\n      $.checkArgument(\n        JSUtil.isNaturalNumber(num),\n        'Output satoshis is not a natural number'\n      );\n      this._satoshisBN = BN.fromNumber(num);\n      this._satoshis = num;\n    }\n    $.checkState(\n      JSUtil.isNaturalNumber(this._satoshis),\n      'Output satoshis is not a natural number'\n    );\n  }\n});\n\nOutput.prototype.invalidSatoshis = function() {\n  if (this._satoshis > MAX_SAFE_INTEGER) {\n    return 'transaction txout satoshis greater than max safe integer';\n  }\n  if (this._satoshis !== this._satoshisBN.toNumber()) {\n    return 'transaction txout satoshis has corrupted value';\n  }\n  if (this._satoshis < 0) {\n    return 'transaction txout negative';\n  }\n  return false;\n};\n\nOutput.prototype.toObject = Output.prototype.toJSON = function toObject() {\n  var obj = {\n    satoshis: this.satoshis\n  };\n  obj.script = this._scriptBuffer.toString('hex');\n  return obj;\n};\n\nOutput.fromObject = function(data) {\n  return new Output(data);\n};\n\nOutput.prototype.setScriptFromBuffer = function(buffer) {\n  this._scriptBuffer = buffer;\n  try {\n    this._script = Script.fromBuffer(this._scriptBuffer);\n    this._script._isOutput = true;\n  } catch(e) {\n    if (e instanceof errors.Script.InvalidBuffer) {\n      this._script = null;\n    } else {\n      throw e;\n    }\n  }\n};\n\nOutput.prototype.setScript = function(script) {\n  if (script instanceof Script) {\n    this._scriptBuffer = script.toBuffer();\n    this._script = script;\n    this._script._isOutput = true;\n  } else if (_.isString(script)) {\n    this._script = Script.fromString(script);\n    this._scriptBuffer = this._script.toBuffer();\n    this._script._isOutput = true;\n  } else if (bufferUtil.isBuffer(script)) {\n    this.setScriptFromBuffer(script);\n  } else {\n    throw new TypeError('Invalid argument type: script');\n  }\n  return this;\n};\n\nOutput.prototype.inspect = function() {\n  var scriptStr;\n  if (this.script) {\n    scriptStr = this.script.inspect();\n  } else {\n    scriptStr = this._scriptBuffer.toString('hex');\n  }\n  return '<Output (' + this.satoshis + ' sats) ' + scriptStr + '>';\n};\n\nOutput.fromBufferReader = function(br) {\n  var obj = {};\n  obj.satoshis = br.readUInt64LEBN();\n  var size = br.readVarintNum();\n  if (size !== 0) {\n    obj.script = br.read(size);\n  } else {\n    obj.script = new buffer.Buffer([]);\n  }\n  return new Output(obj);\n};\n\nOutput.prototype.toBufferWriter = function(writer) {\n  if (!writer) {\n    writer = new BufferWriter();\n  }\n  writer.writeUInt64LEBN(this._satoshisBN);\n  var script = this._scriptBuffer;\n  writer.writeVarintNum(script.length);\n  writer.write(script);\n  return writer;\n};\n\nmodule.exports = Output;\n"]},"metadata":{},"sourceType":"script"}