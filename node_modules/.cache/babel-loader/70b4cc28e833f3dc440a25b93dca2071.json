{"ast":null,"code":"'use strict';\n\nvar bn = require('bn.js');\n\nvar elliptic = require('../../elliptic');\n\nvar utils = elliptic.utils;\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\n\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC)) return new EC(options); // Shortcut `elliptic.ec(curve-name)`\n\n  if (typeof options === 'string') {\n    assert(elliptic.curves.hasOwnProperty(options), 'Unknown curve ' + options);\n    options = elliptic.curves[options];\n  } // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n\n\n  if (options instanceof elliptic.curves.PresetCurve) options = {\n    curve: options\n  };\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.shrn(1);\n  this.g = this.curve.g; // Point on curve\n\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1); // Hash for function for DRBG\n\n  this.hash = options.hash || options.curve.hash;\n}\n\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options) options = {}; // Instantiate Hmac_DRBG\n\n  var drbg = new elliptic.hmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    entropy: options.entropy || elliptic.rand(this.hash.hmacStrength),\n    nonce: this.n.toArray()\n  });\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new bn(2));\n\n  do {\n    var priv = new bn(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0) continue;\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  } while (true);\n};\n\nEC.prototype._truncateToN = function truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0) msg = msg.shrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0) return msg.sub(this.n);else return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n\n  if (!options) options = {};\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new bn(msg, 16)); // Zero-extend key to provide enough entropy\n\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray();\n\n  for (var i = bkey.length; i < 21; i++) bkey.unshift(0); // Zero-extend nonce to have the same byte size as N\n\n\n  var nonce = msg.toArray();\n\n  for (var i = nonce.length; i < bytes; i++) nonce.unshift(0); // Instantiate Hmac_DRBG\n\n\n  var drbg = new elliptic.hmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce\n  }); // Number of bytes to generate\n\n  var ns1 = this.n.sub(new bn(1));\n\n  do {\n    var k = new bn(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0) continue;\n    var kp = this.g.mul(k);\n    if (kp.isInfinity()) continue;\n    var r = kp.getX().mod(this.n);\n    if (r.cmpn(0) === 0) continue;\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg)).mod(this.n);\n    if (s.cmpn(0) === 0) continue; // Use complement of `s`, if it is > `n / 2`\n\n    if (options.canonical && s.cmp(this.nh) > 0) s = this.n.sub(s);\n    return new Signature({\n      r: r,\n      s: s\n    });\n  } while (true);\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new bn(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex'); // Perform primitive values validation\n\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0) return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0) return false; // Validate signature\n\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).mod(this.n);\n  var u2 = sinv.mul(r).mod(this.n);\n  var p = this.g.mulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity()) return false;\n  return p.getX().mod(this.n).cmp(r) === 0;\n};","map":{"version":3,"sources":["/home/user/Desktop/paper/node_modules/bitcore-lib-litecoin/node_modules/elliptic/lib/elliptic/ec/index.js"],"names":["bn","require","elliptic","utils","assert","KeyPair","Signature","EC","options","curves","hasOwnProperty","PresetCurve","curve","n","nh","shrn","g","precompute","bitLength","hash","module","exports","prototype","keyPair","keyFromPrivate","priv","enc","fromPrivate","keyFromPublic","pub","fromPublic","genKeyPair","drbg","hmacDRBG","pers","entropy","rand","hmacStrength","nonce","toArray","bytes","byteLength","ns2","sub","generate","cmp","iaddn","_truncateToN","truncateToN","msg","truncOnly","delta","sign","key","bkey","getPrivate","i","length","unshift","ns1","k","cmpn","kp","mul","isInfinity","r","getX","mod","s","invm","iadd","canonical","verify","signature","sinv","u1","u2","p","mulAdd","getPublic"],"mappings":"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","sourcesContent":["'use strict';\n\nvar bn = require('bn.js');\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(elliptic.curves.hasOwnProperty(options), 'Unknown curve ' + options);\n\n    options = elliptic.curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof elliptic.curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.shrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new elliptic.hmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    entropy: options.entropy || elliptic.rand(this.hash.hmacStrength),\n    nonce: this.n.toArray()\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new bn(2));\n  do {\n    var priv = new bn(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  } while (true);\n};\n\nEC.prototype._truncateToN = function truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.shrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new bn(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray();\n  for (var i = bkey.length; i < 21; i++)\n    bkey.unshift(0);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray();\n  for (var i = nonce.length; i < bytes; i++)\n    nonce.unshift(0);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new elliptic.hmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new bn(1));\n  do {\n    var k = new bn(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var r = kp.getX().mod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg)).mod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0)\n      s = this.n.sub(s);\n\n    return new Signature({ r: r, s: s });\n  } while (true);\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new bn(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).mod(this.n);\n  var u2 = sinv.mul(r).mod(this.n);\n\n  var p = this.g.mulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  return p.getX().mod(this.n).cmp(r) === 0;\n};\n"]},"metadata":{},"sourceType":"script"}