{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/react-wallet/src/sections/main-drawer/index.js\";\nimport { styled, createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useEffect, useState } from 'react';\nimport IconButton from '@mui/material/IconButton';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport { mainListItems, secondaryListItems } from '../../components/listItems';\nimport Toolbar from '@mui/material/Toolbar';\nimport MuiDrawer from '@mui/material/Drawer';\nimport List from '@mui/material/List';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\nconst Drawer = styled(MuiDrawer, {\n  shouldForwardProp: prop => prop !== 'open'\n})(({\n  theme,\n  open\n}) => ({\n  '& .MuiDrawer-paper': {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    boxSizing: 'border-box',\n    ...(!open && {\n      overflowX: 'hidden',\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      }),\n      width: theme.spacing(7),\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9)\n      }\n    })\n  }\n}));\n\nconst MainDrawer = ({\n  open,\n  setOpen\n}) => {\n  const toggleDrawer = () => {\n    setOpen(!open);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Drawer, {\n    variant: \"permanent\",\n    open: open,\n    children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        px: [1]\n      },\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: toggleDrawer,\n        children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: mainListItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_c = MainDrawer;\nexport default MainDrawer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainDrawer\");","map":{"version":3,"sources":["/home/user/Desktop/react-wallet/src/sections/main-drawer/index.js"],"names":["styled","createTheme","ThemeProvider","useEffect","useState","IconButton","ChevronLeftIcon","mainListItems","secondaryListItems","Toolbar","MuiDrawer","List","drawerWidth","Drawer","shouldForwardProp","prop","theme","open","position","whiteSpace","width","transition","transitions","create","easing","sharp","duration","enteringScreen","boxSizing","overflowX","leavingScreen","spacing","breakpoints","up","MainDrawer","setOpen","toggleDrawer","display","alignItems","justifyContent","px"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,WAAjB,EAA8BC,aAA9B,QAAmD,sBAAnD;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AACA,SAASC,aAAT,EAAwBC,kBAAxB,QAAkD,4BAAlD;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AAEA,MAAMC,WAAW,GAAG,GAApB;AAGA,MAAMC,MAAM,GAAGb,MAAM,CAACU,SAAD,EAAY;AAAEI,EAAAA,iBAAiB,EAAGC,IAAD,IAAUA,IAAI,KAAK;AAAxC,CAAZ,CAAN,CACT,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,MAAsB;AACpB,wBAAsB;AACpBC,IAAAA,QAAQ,EAAE,UADU;AAEpBC,IAAAA,UAAU,EAAE,QAFQ;AAGpBC,IAAAA,KAAK,EAAER,WAHa;AAIpBS,IAAAA,UAAU,EAAEL,KAAK,CAACM,WAAN,CAAkBC,MAAlB,CAAyB,OAAzB,EAAkC;AAC5CC,MAAAA,MAAM,EAAER,KAAK,CAACM,WAAN,CAAkBE,MAAlB,CAAyBC,KADW;AAE5CC,MAAAA,QAAQ,EAAEV,KAAK,CAACM,WAAN,CAAkBI,QAAlB,CAA2BC;AAFO,KAAlC,CAJQ;AAQpBC,IAAAA,SAAS,EAAE,YARS;AASpB,QAAI,CAACX,IAAD,IAAS;AACXY,MAAAA,SAAS,EAAE,QADA;AAEXR,MAAAA,UAAU,EAAEL,KAAK,CAACM,WAAN,CAAkBC,MAAlB,CAAyB,OAAzB,EAAkC;AAC5CC,QAAAA,MAAM,EAAER,KAAK,CAACM,WAAN,CAAkBE,MAAlB,CAAyBC,KADW;AAE5CC,QAAAA,QAAQ,EAAEV,KAAK,CAACM,WAAN,CAAkBI,QAAlB,CAA2BI;AAFO,OAAlC,CAFD;AAMXV,MAAAA,KAAK,EAAEJ,KAAK,CAACe,OAAN,CAAc,CAAd,CANI;AAOX,OAACf,KAAK,CAACgB,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5Bb,QAAAA,KAAK,EAAEJ,KAAK,CAACe,OAAN,CAAc,CAAd;AADqB;AAPnB,KAAb;AAToB;AADF,CAAtB,CADS,CAAf;;AA0BA,MAAMG,UAAU,GAAG,CAAC;AAACjB,EAAAA,IAAD;AAAOkB,EAAAA;AAAP,CAAD,KAAqB;AAIpC,QAAMC,YAAY,GAAG,MAAM;AACvBD,IAAAA,OAAO,CAAC,CAAClB,IAAF,CAAP;AACD,GAFH;;AAMA,sBAEI,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,IAAI,EAAEA,IAAlC;AAAA,4BACI,QAAC,OAAD;AACI,MAAA,EAAE,EAAE;AACAoB,QAAAA,OAAO,EAAE,MADT;AAEAC,QAAAA,UAAU,EAAE,QAFZ;AAGAC,QAAAA,cAAc,EAAE,UAHhB;AAIAC,QAAAA,EAAE,EAAE,CAAC,CAAD;AAJJ,OADR;AAAA,6BAQI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAEJ,YAArB;AAAA,+BACI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAaI,QAAC,IAAD;AAAA,gBAAO7B;AAAP;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAsBH,CAhCD;;KAAM2B,U;AAkCN,eAAeA,UAAf","sourcesContent":["import { styled, createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useEffect, useState } from 'react';\nimport IconButton from '@mui/material/IconButton';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport { mainListItems, secondaryListItems } from '../../components/listItems';\nimport Toolbar from '@mui/material/Toolbar';\nimport MuiDrawer from '@mui/material/Drawer';\nimport List from '@mui/material/List';\n\nconst drawerWidth = 240;\n\n\nconst Drawer = styled(MuiDrawer, { shouldForwardProp: (prop) => prop !== 'open' })(\n      ({ theme, open }) => ({\n        '& .MuiDrawer-paper': {\n          position: 'relative',\n          whiteSpace: 'nowrap',\n          width: drawerWidth,\n          transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n          }),\n          boxSizing: 'border-box',\n          ...(!open && {\n            overflowX: 'hidden',\n            transition: theme.transitions.create('width', {\n              easing: theme.transitions.easing.sharp,\n              duration: theme.transitions.duration.leavingScreen,\n            }),\n            width: theme.spacing(7),\n            [theme.breakpoints.up('sm')]: {\n              width: theme.spacing(9),\n            },\n          }),\n        },\n      }),\n    );\n\nconst MainDrawer = ({open, setOpen}) => {\n\n\n\n    const toggleDrawer = () => {\n        setOpen(!open);\n      };\n\n\n\n    return (\n\n        <Drawer variant=\"permanent\" open={open}>\n            <Toolbar\n                sx={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'flex-end',\n                    px: [1],\n                }}\n            >\n                <IconButton onClick={toggleDrawer}>\n                    <ChevronLeftIcon />\n                </IconButton>\n            </Toolbar>\n            <List>{mainListItems}</List>\n        </Drawer>\n\n\n    )\n\n\n}\n\nexport default MainDrawer"]},"metadata":{},"sourceType":"module"}